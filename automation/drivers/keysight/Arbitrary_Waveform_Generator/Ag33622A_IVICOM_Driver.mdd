<?xml version="1.0" encoding="utf-8"?>
<MATLABInstrumentDriver>
   <FileVersion>2.43</FileVersion>
   <DriverName>Ag3352x.Ag3352x</DriverName>
   <DriverType>MATLAB IVI-COM</DriverType>
   <InstrumentType>IAg3352x3</InstrumentType>
   <InstrumentManufacturer>Manufacturer</InstrumentManufacturer>
   <InstrumentModel>Model</InstrumentModel>
   <InstrumentVersion>1.0</InstrumentVersion>
   <Identify>*IDN?</Identify>
   <Reset>*RST</Reset>
   <Selftest>*TST?</Selftest>
   <Error>System:Error?</Error>
   <CreateInitCode>
      <Code>function init(obj)
% This function is called after the object is created.
% OBJ is the device object.
% End of function definition - DO NOT EDIT
ictver = ver('instrument');
splittedVer = regexp (ictver.Version , '\.', 'split');
if (~isempty(splittedVer) &amp;&amp; (str2num(char(splittedVer(1))) &lt; 2 || (str2num(char(splittedVer(1))) == 2 &amp;&amp; str2num(char(splittedVer(2))) &lt;= 6)))
   error('instrument:icdevice:newerdriver','This driver requires Instrument Control ToolBox version 2.7.0 (R2008B) or later');
end
</Code>
   </CreateInitCode>
   <ConnectInitCode>
      <Type>MCode</Type>
      <Code>function init(obj)
% This function is called after the object is connected.
% OBJ is the device object.
% End of function definition - DO NOT EDIT

% NOTE: This code is required to support driver interfaces that are collections.
%       Deleting or altering this code may prevent device objects using this
%       driver from operating correctly.

comobj = get(obj, 'Interface');

warning off backtrace
try
	collection = comobj;
	collection = get(collection, 'Channels2');
	instrgate('privateIviComDriverHelper', 'group', obj, collection, 'Channels2');
catch e
	errorMsg = instrgate('privateCOMGetErrorInfo');
	warning('%s',errorMsg.Description);
end

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2apply');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2bpsk');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2burst');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2fsk');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2phaselock');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2pm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2pwm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2summodulation');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2sweep');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2am');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2fm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2trigger');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2output');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2outputfunction');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2marker');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2trigger2');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2outputfunction2');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2apply2');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2output2');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2apply');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2bpsk');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2burst');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2fsk');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2phaselock');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2pm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2pwm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2summodulation');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2sweep');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2am');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2fm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2trigger');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2output');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2outputfunction');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2marker');

try
	collection = comobj;
	collection = get(collection, 'Channels');
	instrgate('privateIviComDriverHelper', 'group', obj, collection, 'Channels');
catch e
	errorMsg = instrgate('privateCOMGetErrorInfo');
	warning('%s',errorMsg.Description);
end

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelapply');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelbpsk');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelburst');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelfsk');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelphaselock');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelpm');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelpwm');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelsummodulation');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelsweep');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelam');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelfm');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channeltrigger');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channeloutput');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channeloutputfunction');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelmarker');

try
	collection = comobj;
	collection = get(collection, 'Channels3');
	instrgate('privateIviComDriverHelper', 'group', obj, collection, 'Channels3');
catch e
	errorMsg = instrgate('privateCOMGetErrorInfo');
	warning('%s',errorMsg.Description);
end

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3trigger2');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3outputfunction2');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3apply2');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3output2');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3apply');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3bpsk');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3burst');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3fsk');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3phaselock');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3pm');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3pwm');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3summodulation');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3sweep');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3am');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3fm');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3trigger');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3output');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3outputfunction');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3marker');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3outputfunction3');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3phaselock2');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3trigger3');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3output3');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3trigger2');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3outputfunction2');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3apply2');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3output2');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3apply');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3bpsk');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3burst');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3fsk');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3phaselock');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3pm');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3pwm');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3summodulation');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3sweep');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3am');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3fm');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3trigger');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3output');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3outputfunction');

collection = comobj;
collection = get(collection, 'Channels3');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels3' , 'Channel3marker');

try
	collection = comobj;
	collection = get(collection, 'Channels2');
	instrgate('privateIviComDriverHelper', 'group', obj, collection, 'Channels2');
catch e
	errorMsg = instrgate('privateCOMGetErrorInfo');
	warning('%s',errorMsg.Description);
end

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2apply');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2bpsk');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2burst');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2fsk');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2phaselock');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2pm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2pwm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2summodulation');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2sweep');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2am');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2fm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2trigger');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2output');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2outputfunction');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2marker');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2trigger2');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2outputfunction2');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2apply2');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2output2');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2apply');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2bpsk');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2burst');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2fsk');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2phaselock');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2pm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2pwm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2summodulation');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2sweep');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2am');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2fm');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2trigger');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2output');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2outputfunction');

collection = comobj;
collection = get(collection, 'Channels2');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels2' , 'Channel2marker');

try
	collection = comobj;
	collection = get(collection, 'Channels');
	instrgate('privateIviComDriverHelper', 'group', obj, collection, 'Channels');
catch e
	errorMsg = instrgate('privateCOMGetErrorInfo');
	warning('%s',errorMsg.Description);
end

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelapply');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelbpsk');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelburst');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelfsk');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelphaselock');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelpm');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelpwm');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelsummodulation');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelsweep');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelam');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelfm');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channeltrigger');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channeloutput');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channeloutputfunction');

collection = comobj;
collection = get(collection, 'Channels');
instrgate('privateIviComDriverHelper', 'nestedgroup', obj, collection, 'Channels' , 'Channelmarker');

warning on backtrace
</Code>
   </ConnectInitCode>
   <CleanupCode>
      <Type>InstrumentCommand</Type>
   </CleanupCode>
   <GroupInfo>
      <Group>
         <Name>parent</Name>
         <Description/>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="parent1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Initialized</Name>
               <Location>parent</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Interface;
	propertyValue = comobj.Initialized;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Initialized is True between a successful call to the Initialize method and a successful call to the Close method, and False at all other times.</Description>
            </Property>
            <Property>
               <Name>Initialized</Name>
               <Location>parent</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Interface;
	propertyValue = comobj.Initialized;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Initialized is True between a successful call to the Initialize method and a successful call to the Close method, and False at all other times.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Close</Name>
               <Location>parent</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Close(obj)

comobj = obj.Interface;
feature('COM_SafeArraySingleDim',1);
comobj.Close();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Closes the I/O session to the instrument.  Driver methods and properties that access the instrument are not accessible after Close is called.</Description>
            </Method>
            <Method>
               <Name>Close</Name>
               <Location>parent</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Close(obj)

comobj = obj.Interface;
feature('COM_SafeArraySingleDim',1);
comobj.Close();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Closes the I/O session to the instrument.  Driver methods and properties that access the instrument are not accessible after Close is called.</Description>
            </Method>
            <Method>
               <Name>Initialize</Name>
               <Location>parent</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initialize(obj, ResourceName, IdQuery, Reset, OptionString)

comobj = obj.Interface;
feature('COM_SafeArraySingleDim',1);
comobj.Initialize(ResourceName, logical(IdQuery), logical(Reset), OptionString);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Opens the I/O session to the instrument.  Driver methods and properties that access the instrument are only accessible after Initialize is called.  Initialize optionally performs a Reset and queries the instrument to validate the instrument model.</Description>
            </Method>
            <Method>
               <Name>Initialize</Name>
               <Location>parent</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initialize(obj, ResourceName, IdQuery, Reset, OptionString)

comobj = obj.Interface;
feature('COM_SafeArraySingleDim',1);
comobj.Initialize(ResourceName, logical(IdQuery), logical(Reset), OptionString);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Opens the I/O session to the instrument.  Driver methods and properties that access the instrument are only accessible after Initialize is called.  Initialize optionally performs a Reset and queries the instrument to validate the instrument model.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Calibration</Name>
         <Description>IAg3352xCalibration interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Calibration1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Count</Name>
               <Location>Calibration</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Calibration;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The number of times instrument has been calibrated.</Description>
            </Property>
            <Property>
               <Name>SecureState</Name>
               <Location>Calibration</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Calibration;
	propertyValue = comobj.SecureState;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The calibration security setting secure or unsecure.</Description>
            </Property>
            <Property>
               <Name>State</Name>
               <Location>Calibration</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Calibration;
	propertyValue = comobj.State;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Calibration;
	comobj.State = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The function generator's internal state for each of the calibration steps to be performed.</Description>
            </Property>
            <Property>
               <Name>String</Name>
               <Location>Calibration</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Calibration;
	propertyValue = comobj.String;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Calibration;
	comobj.String = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Calibration message.</Description>
            </Property>
            <Property>
               <Name>Value</Name>
               <Location>Calibration</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Calibration;
	propertyValue = comobj.Value;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Calibration;
	comobj.Value = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The value of the known calibration signal.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Calibrate</Name>
               <Location>Calibration</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Calibrate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Calibration;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.Calibrate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method performs a calibration of the multimeter using the specified calibration value.</Description>
            </Method>
            <Method>
               <Name>SetSecureState</Name>
               <Location>Calibration</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSecureState(obj, Mode, Code)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Calibration;
feature('COM_SafeArraySingleDim',1);
comobj.SetSecureState(logical(Mode), Code);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method  unsecures or secures the instrument for calibration.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel</Name>
         <Description>IAg3352xChannel interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel1" Index="1"/>
         </Mappings>
         <PropertyInfo/>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2</Name>
         <Description>IAg3352xChannel2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel21" Index="1"/>
         </Mappings>
         <PropertyInfo/>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2AM</Name>
         <Description>IAg3352xAM interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2AM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Depth</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Depth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Depth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Depth</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Depth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Depth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Depth</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Depth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Depth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Depth</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Depth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Depth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMax</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMax</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMax</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMax</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMin</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMin</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMin</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMin</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>AM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>AM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>AM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>AM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of the frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of the frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of the frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of the frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of the frequency in Hertz(Hz) of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of the frequency in Hertz(Hz) of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of the frequency in Hertz(Hz) of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of the frequency in Hertz(Hz) of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xAMModeDSSC" Value="Ag3352xAMModeDSSC"/>
                     <Enum Name="Ag3352xAMModeNormal" Value="Ag3352xAMModeNormal"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Amplitude Modulation mode Double Sideband Suppressed Carrier (ON) or AM modulated carrier with sidebands (OFF) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xAMModeDSSC" Value="Ag3352xAMModeDSSC"/>
                     <Enum Name="Ag3352xAMModeNormal" Value="Ag3352xAMModeNormal"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Amplitude Modulation mode Double Sideband Suppressed Carrier (ON) or AM modulated carrier with sidebands (OFF) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xAMModeDSSC" Value="Ag3352xAMModeDSSC"/>
                     <Enum Name="Ag3352xAMModeNormal" Value="Ag3352xAMModeNormal"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Amplitude Modulation mode Double Sideband Suppressed Carrier (ON) or AM modulated carrier with sidebands (OFF) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xAMModeDSSC" Value="Ag3352xAMModeDSSC"/>
                     <Enum Name="Ag3352xAMModeNormal" Value="Ag3352xAMModeNormal"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Amplitude Modulation mode Double Sideband Suppressed Carrier (ON) or AM modulated carrier with sidebands (OFF) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2Apply</Name>
         <Description>IAg3352xApply interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2Apply1" Index="1"/>
         </Mappings>
         <PropertyInfo/>
         <MethodInfo>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel2Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2Apply2</Name>
         <Description>IAg3352xApply2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2Apply21" Index="1"/>
         </Mappings>
         <PropertyInfo/>
         <MethodInfo>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetTriangle</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetTriangle(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetTriangle(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a triangle wave with the specified frequency, amplitude, and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetTriangle</Name>
               <Location>Channel2Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetTriangle(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetTriangle(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a triangle wave with the specified frequency, amplitude, and dc offset.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2BPSK</Name>
         <Description>IAg3352xBPSK interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2BPSK1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>BPSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>BPSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>BPSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>BPSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output phase 'shifts' between the carrier and offset phase for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output phase 'shifts' between the carrier and offset phase for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output phase 'shifts' between the carrier and offset phase for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output phase 'shifts' between the carrier and offset phase for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The BPSK source for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The BPSK source for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The BPSK source for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The BPSK source for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2Burst</Name>
         <Description>IAg3352xBurst interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2Burst1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Disables (false) or enables (true) the burst mode.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Disables (false) or enables (true) the burst mode.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Disables (false) or enables (true) the burst mode.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Disables (false) or enables (true) the burst mode.</Description>
            </Property>
            <Property>
               <Name>GatePolarity</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.GatePolarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.GatePolarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstGatePolarityNormal" Value="Ag3352xBurstGatePolarityNormal"/>
                     <Enum Name="Ag3352xBurstGatePolarityInverted" Value="Ag3352xBurstGatePolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Logic levels on the rear-panel Trig In connector for an externally-gated burst.</Description>
            </Property>
            <Property>
               <Name>GatePolarity</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.GatePolarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.GatePolarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstGatePolarityNormal" Value="Ag3352xBurstGatePolarityNormal"/>
                     <Enum Name="Ag3352xBurstGatePolarityInverted" Value="Ag3352xBurstGatePolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Logic levels on the rear-panel Trig In connector for an externally-gated burst.</Description>
            </Property>
            <Property>
               <Name>GatePolarity</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.GatePolarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.GatePolarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstGatePolarityNormal" Value="Ag3352xBurstGatePolarityNormal"/>
                     <Enum Name="Ag3352xBurstGatePolarityInverted" Value="Ag3352xBurstGatePolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Logic levels on the rear-panel Trig In connector for an externally-gated burst.</Description>
            </Property>
            <Property>
               <Name>GatePolarity</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.GatePolarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.GatePolarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstGatePolarityNormal" Value="Ag3352xBurstGatePolarityNormal"/>
                     <Enum Name="Ag3352xBurstGatePolarityInverted" Value="Ag3352xBurstGatePolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Logic levels on the rear-panel Trig In connector for an externally-gated burst.</Description>
            </Property>
            <Property>
               <Name>InternalPeriod</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriod;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.InternalPeriod = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriod</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriod;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.InternalPeriod = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriod</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriod;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.InternalPeriod = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriod</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriod;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.InternalPeriod = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstModeTriggered" Value="Ag3352xBurstModeTriggered"/>
                     <Enum Name="Ag3352xBurstModeGated" Value="Ag3352xBurstModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst mode triggered or gated.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstModeTriggered" Value="Ag3352xBurstModeTriggered"/>
                     <Enum Name="Ag3352xBurstModeGated" Value="Ag3352xBurstModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst mode triggered or gated.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstModeTriggered" Value="Ag3352xBurstModeTriggered"/>
                     <Enum Name="Ag3352xBurstModeGated" Value="Ag3352xBurstModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst mode triggered or gated.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstModeTriggered" Value="Ag3352xBurstModeTriggered"/>
                     <Enum Name="Ag3352xBurstModeGated" Value="Ag3352xBurstModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst mode triggered or gated.</Description>
            </Property>
            <Property>
               <Name>NumberOfCycles</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCycles;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.NumberOfCycles = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCycles</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCycles;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.NumberOfCycles = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCycles</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCycles;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.NumberOfCycles = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCycles</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCycles;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.NumberOfCycles = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Degrees or radians to set the starting phase for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Degrees or radians to set the starting phase for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Degrees or radians to set the starting phase for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Degrees or radians to set the starting phase for the burst.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>SetNumberOfCyclesInfinity</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNumberOfCyclesInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Burst;
feature('COM_SafeArraySingleDim',1);
comobj.SetNumberOfCyclesInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the number of cycles to be output per burst (triggered burst mode only).</Description>
            </Method>
            <Method>
               <Name>SetNumberOfCyclesInfinity</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNumberOfCyclesInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Burst;
feature('COM_SafeArraySingleDim',1);
comobj.SetNumberOfCyclesInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the number of cycles to be output per burst (triggered burst mode only).</Description>
            </Method>
            <Method>
               <Name>SetNumberOfCyclesInfinity</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNumberOfCyclesInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Burst;
feature('COM_SafeArraySingleDim',1);
comobj.SetNumberOfCyclesInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the number of cycles to be output per burst (triggered burst mode only).</Description>
            </Method>
            <Method>
               <Name>SetNumberOfCyclesInfinity</Name>
               <Location>Channel2Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNumberOfCyclesInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Burst;
feature('COM_SafeArraySingleDim',1);
comobj.SetNumberOfCyclesInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the number of cycles to be output per burst (triggered burst mode only).</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2FM</Name>
         <Description>IAg3352xFM interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2FM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2FSK</Name>
         <Description>IAg3352xFSK interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2FSK1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK source.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK source.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK source.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK source.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2Marker</Name>
         <Description>IAg3352xMarker interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2Marker1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Cycle</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Cycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Cycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Cycle</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Cycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Cycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Cycle</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Cycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Cycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Cycle</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Cycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Cycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Point</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Point;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Point = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Point</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Point;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Point = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Point</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Point;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Point = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Point</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Point;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Point = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMax</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMin</Name>
               <Location>Channel2Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2Output</Name>
         <Description>IAg3352xOutput interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2Output1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel2Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2Output2</Name>
         <Description>IAg3352xOutput2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2Output21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output2;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output2;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output2;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel2Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output2;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2Output2Voltage2</Name>
         <Description>IAg3352xOutputVoltage2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2Output2Voltage21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Amplitude</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.Amplitude;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	comobj.Amplitude = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The output amplitude in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Amplitude</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.Amplitude;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	comobj.Amplitude = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The output amplitude in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>AmplitudeMax</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.AmplitudeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output amplitude in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>AmplitudeMax</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.AmplitudeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output amplitude in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>AmplitudeMin</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.AmplitudeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output amplitude in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>AmplitudeMin</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.AmplitudeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output amplitude in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>AutoRangingEnabled</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.AutoRangingEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	comobj.AutoRangingEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The voltage autoranging state for all functions for the specified channel.</Description>
            </Property>
            <Property>
               <Name>AutoRangingEnabled</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.AutoRangingEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	comobj.AutoRangingEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The voltage autoranging state for all functions for the specified channel.</Description>
            </Property>
            <Property>
               <Name>CouplingEnabled</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.CouplingEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	comobj.CouplingEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Setting this property to true sets the instrument's amplitude, offset, range, load, and units on both channels to the same value, and when either channel's amplitude is changed, the other channel will change to the same value.</Description>
            </Property>
            <Property>
               <Name>High</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.High;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	comobj.High = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The high voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>High</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.High;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	comobj.High = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The high voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>HighMax</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.HighMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum high voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>HighMax</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.HighMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum high voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>HighMin</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.HighMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum high voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>HighMin</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.HighMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum high voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Low</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.Low;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	comobj.Low = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The low voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Low</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.Low;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	comobj.Low = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The low voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>LowMax</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.LowMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum low voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>LowMax</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.LowMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum low voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>LowMin</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.LowMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum low voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>LowMin</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.LowMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum low voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Units</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.Units;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	comobj.Units = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputVoltageUnitVpp" Value="Ag3352xOutputVoltageUnitVpp"/>
                     <Enum Name="Ag3352xOutputVoltageUnitVrms" Value="Ag3352xOutputVoltageUnitVrms"/>
                     <Enum Name="Ag3352xOutputVoltageUnitDbm" Value="Ag3352xOutputVoltageUnitDbm"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The unit for output amplitude for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Units</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	propertyValue = comobj.Units;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj = comobj.Voltage2;
	comobj.Units = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputVoltageUnitVpp" Value="Ag3352xOutputVoltageUnitVpp"/>
                     <Enum Name="Ag3352xOutputVoltageUnitVrms" Value="Ag3352xOutputVoltageUnitVrms"/>
                     <Enum Name="Ag3352xOutputVoltageUnitDbm" Value="Ag3352xOutputVoltageUnitDbm"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The unit for output amplitude for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>AutoRangingOnce</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function AutoRangingOnce(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output2;
comobj = comobj.Voltage2;
feature('COM_SafeArraySingleDim',1);
comobj.AutoRangingOnce();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the autoranging ON, and then OFF.</Description>
            </Method>
            <Method>
               <Name>AutoRangingOnce</Name>
               <Location>Channel2Output2Voltage2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function AutoRangingOnce(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output2;
comobj = comobj.Voltage2;
feature('COM_SafeArraySingleDim',1);
comobj.AutoRangingOnce();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the autoranging ON, and then OFF.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2OutputCouple</Name>
         <Description>IAg3352xOutputFrequencyCoupling interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputCouple1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2OutputCouple</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Couple;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Couple;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency coupled state (enabled or Disabled).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2OutputCouple</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Couple;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Couple;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyCoupleModeOffset" Value="Ag3352xOutputFrequencyCoupleModeOffset"/>
                     <Enum Name="Ag3352xOutputFrequencyCoupleModeRatio" Value="Ag3352xOutputFrequencyCoupleModeRatio"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Offset</Name>
               <Location>Channel2OutputCouple</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Couple;
	propertyValue = comobj.Offset;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Couple;
	comobj.Offset = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The offset frequency when a 2 channel function generator is in frequency coupled mode offset.</Description>
            </Property>
            <Property>
               <Name>Ratio</Name>
               <Location>Channel2OutputCouple</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Couple;
	propertyValue = comobj.Ratio;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Couple;
	comobj.Ratio = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The offset ratio between channel frequencies when a 2 channel function generator is in frequency coupled mode Ratio.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunction</Name>
         <Description>IAg3352xOutputFunction interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunction1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Function</Name>
               <Location>Channel2OutputFunction</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>Channel2OutputFunction</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>Channel2OutputFunction</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>Channel2OutputFunction</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunction2</Name>
         <Description>IAg3352xOutputFunction2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunction21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Function</Name>
               <Location>Channel2OutputFunction2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>Channel2OutputFunction2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>Channel2OutputFunction2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>Channel2OutputFunction2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunction2ArbitraryWaveform2</Name>
         <Description>IAg3352xOutputFunctionArbitraryWaveform2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunction2ArbitraryWaveform21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>AdvanceClockSource</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	propertyValue = comobj.AdvanceClockSource;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj.AdvanceClockSource = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformAdvanceClockSourceTrigger" Value="Ag3352xOutputFunctionArbitraryWaveformAdvanceClockSourceTrigger"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryAdvanceClockSRate" Value="Ag3352xOutputFunctionArbitraryAdvanceClockSRate"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The point advance clock source for the 33521A/33522A instrument's Arbitrary waveform playback.</Description>
            </Property>
            <Property>
               <Name>AdvanceClockSource</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	propertyValue = comobj.AdvanceClockSource;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj.AdvanceClockSource = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformAdvanceClockSourceTrigger" Value="Ag3352xOutputFunctionArbitraryWaveformAdvanceClockSourceTrigger"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryAdvanceClockSRate" Value="Ag3352xOutputFunctionArbitraryAdvanceClockSRate"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The point advance clock source for the 33521A/33522A instrument's Arbitrary waveform playback.</Description>
            </Property>
            <Property>
               <Name>FormatBorder</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	propertyValue = comobj.FormatBorder;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj.FormatBorder = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformFormatBorderNormal" Value="Ag3352xOutputFunctionArbitraryWaveformFormatBorderNormal"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformFormatBorderSwapped" Value="Ag3352xOutputFunctionArbitraryWaveformFormatBorderSwapped"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Not Supported - The byte order which will be used to make binary data point transfers in the block mode.</Description>
            </Property>
            <Property>
               <Name>FormatBorder</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	propertyValue = comobj.FormatBorder;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj.FormatBorder = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformFormatBorderNormal" Value="Ag3352xOutputFunctionArbitraryWaveformFormatBorderNormal"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformFormatBorderSwapped" Value="Ag3352xOutputFunctionArbitraryWaveformFormatBorderSwapped"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Not Supported - The byte order which will be used to make binary data point transfers in the block mode.</Description>
            </Property>
            <Property>
               <Name>InterpolationEnabled</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	propertyValue = comobj.InterpolationEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj.InterpolationEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationNormal" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationNormal"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationStep" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationStep"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationOff" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationOff"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The interpolation mode (Enabled or Disabled) between points in an arbitrary waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InterpolationEnabled</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	propertyValue = comobj.InterpolationEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj.InterpolationEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationNormal" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationNormal"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationStep" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationStep"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationOff" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationOff"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The interpolation mode (Enabled or Disabled) between points in an arbitrary waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>SelectedWaveform</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	propertyValue = comobj.SelectedWaveform;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the name of the currently selected waveform in memory for the specified channel.</Description>
            </Property>
            <Property>
               <Name>SymmetricAmplitude</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	propertyValue = comobj.SymmetricAmplitude;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj.SymmetricAmplitude = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Setting this property allows you to bind a specific peak-to-peak voltage to any Arb selected by the SelectArbWaveform method.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Clear</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Clear(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.Clear();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method clears the contents of the volatile waveform memory.</Description>
            </Method>
            <Method>
               <Name>Clear</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Clear(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.Clear();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method clears the contents of the volatile waveform memory.</Description>
            </Method>
            <Method>
               <Name>CreateArbSequence</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [ArbName, RepeatCount, PlayControl, MarkerMode, MarkerPoint] = CreateArbSequence(obj, SequenceName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
[ArbName, RepeatCount, PlayControl, MarkerMode, MarkerPoint] = comobj.CreateArbSequence(SequenceName, ['';''], int32([0;0]), ['';''], ['';''], int32([0;0]));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method defines a sequence of waveforms already loaded into waveform memory.</Description>
            </Method>
            <Method>
               <Name>CreateArbSequence</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [ArbName, RepeatCount, PlayControl, MarkerMode, MarkerPoint] = CreateArbSequence(obj, SequenceName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
[ArbName, RepeatCount, PlayControl, MarkerMode, MarkerPoint] = comobj.CreateArbSequence(SequenceName, ['';''], int32([0;0]), ['';''], ['';''], int32([0;0]));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method defines a sequence of waveforms already loaded into waveform memory.</Description>
            </Method>
            <Method>
               <Name>GetCatalog</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetCatalog(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetCatalog();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the contents of volatile waveform memory on the specified channel. Both individual arbs and sequences of arbs are returned.</Description>
            </Method>
            <Method>
               <Name>GetCatalog</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetCatalog(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetCatalog();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the contents of volatile waveform memory on the specified channel. Both individual arbs and sequences of arbs are returned.</Description>
            </Method>
            <Method>
               <Name>LoadArbWaveform</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Data] = LoadArbWaveform(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
[Data] = comobj.LoadArbWaveform(Name, [0;0]);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method downloads floating point values between +1 and -1 into volatile memory.</Description>
            </Method>
            <Method>
               <Name>LoadArbWaveform</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Data] = LoadArbWaveform(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
[Data] = comobj.LoadArbWaveform(Name, [0;0]);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method downloads floating point values between +1 and -1 into volatile memory.</Description>
            </Method>
            <Method>
               <Name>LoadArbWaveformDAC</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadArbWaveformDAC(obj, Name, Data)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.LoadArbWaveformDAC(Name, int16(Data));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Downloads integer values representing DAC codes into waveform volatile memory.</Description>
            </Method>
            <Method>
               <Name>LoadDualArbWaveform</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadDualArbWaveform(obj, Format, Name, Data)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.LoadDualArbWaveform(Format, Name, single(Data));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Creates a dual arbitrary waveform. It downloads floating point values between +1 and -1 into waveform memory in the specified format.</Description>
            </Method>
            <Method>
               <Name>LoadDualArbWaveformDAC</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadDualArbWaveformDAC(obj, Format, Name, Data)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.LoadDualArbWaveformDAC(Format, Name, int16(Data));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Creates a dual arbitrary waveform. It downloads decimal integer values representing DAC codes into waveform memory in the specified format.</Description>
            </Method>
            <Method>
               <Name>OpenArbWaveform</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function OpenArbWaveform(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.OpenArbWaveform(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads the specified segment(.seg) or sequence(.seq) file on INTERNAL or USB memory into volatile memory for the channel specified.</Description>
            </Method>
            <Method>
               <Name>OpenArbWaveform</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function OpenArbWaveform(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.OpenArbWaveform(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads the specified segment(.seg) or sequence(.seq) file on INTERNAL or USB memory into volatile memory for the channel specified.</Description>
            </Method>
            <Method>
               <Name>SelectArbWaveform</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SelectArbWaveform(obj, Name)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.SelectArbWaveform(Name);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method selects an Arb or Sequence which has been loaded into the waveform memory.</Description>
            </Method>
            <Method>
               <Name>SelectArbWaveform</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SelectArbWaveform(obj, Name)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.SelectArbWaveform(Name);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method selects an Arb or Sequence which has been loaded into the waveform memory.</Description>
            </Method>
            <Method>
               <Name>StoreArbWaveform</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function StoreArbWaveform(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.StoreArbWaveform(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method stores the specified segment(.seg) or sequence(.seq) data in the channel specified volatile memory on INTERNAL or USB memory.</Description>
            </Method>
            <Method>
               <Name>StoreArbWaveform</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function StoreArbWaveform(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.StoreArbWaveform(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method stores the specified segment(.seg) or sequence(.seq) data in the channel specified volatile memory on INTERNAL or USB memory.</Description>
            </Method>
            <Method>
               <Name>SynchronizeArbs</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeArbs(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction2;
comobj = comobj.ArbitraryWaveform2;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeArbs();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Causes two independent arbitrary waveforms to synchronize to first point of each waveform.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2OutputFunction2ArbitraryWaveform2DualArbCorrections</Name>
         <Description>IAg3352xOutputFunctionArbitraryWaveform2DualArbCorrections interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunction2ArbitraryWaveform2DualArbCorrections1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>BalanceEnabled</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2DualArbCorrections</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj = comobj.DualArbCorrections;
	propertyValue = comobj.BalanceEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj = comobj.DualArbCorrections;
	comobj.BalanceEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Enables or disables channel balancing for dual arbitrary waveforms.</Description>
            </Property>
            <Property>
               <Name>BalanceGain</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2DualArbCorrections</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj = comobj.DualArbCorrections;
	propertyValue = comobj.BalanceGain;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj = comobj.DualArbCorrections;
	comobj.BalanceGain = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Specifies the gain balance ratio which is the amplitude of channel 1 divided by the amplitude of channel 2.</Description>
            </Property>
            <Property>
               <Name>BalanceOffset</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2DualArbCorrections</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj = comobj.DualArbCorrections;
	propertyValue = comobj.BalanceOffset;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj = comobj.DualArbCorrections;
	comobj.BalanceOffset = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets the offset (in volts) added to the dual arbitrary waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>SkewEnabled</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2DualArbCorrections</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj = comobj.DualArbCorrections;
	propertyValue = comobj.SkewEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj = comobj.DualArbCorrections;
	comobj.SkewEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Enables or disables skew time compensation.</Description>
            </Property>
            <Property>
               <Name>SkewTime</Name>
               <Location>Channel2OutputFunction2ArbitraryWaveform2DualArbCorrections</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj = comobj.DualArbCorrections;
	propertyValue = comobj.SkewTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj = comobj.ArbitraryWaveform2;
	comobj = comobj.DualArbCorrections;
	comobj.SkewTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Specifies a small time difference between the channels to compensate for minor variations in timing at the connector output plane or at the device under test.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunctionArbitraryWaveform</Name>
         <Description>IAg3352xOutputFunctionArbitraryWaveform interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunctionArbitraryWaveform1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>AdvanceClockSource</Name>
               <Location>Channel2OutputFunctionArbitraryWaveform</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	propertyValue = comobj.AdvanceClockSource;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj.AdvanceClockSource = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformAdvanceClockSourceTrigger" Value="Ag3352xOutputFunctionArbitraryWaveformAdvanceClockSourceTrigger"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryAdvanceClockSRate" Value="Ag3352xOutputFunctionArbitraryAdvanceClockSRate"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The point advance clock source for the 33521A/33522A instrument's Arbitrary waveform playback.</Description>
            </Property>
            <Property>
               <Name>FormatBorder</Name>
               <Location>Channel2OutputFunctionArbitraryWaveform</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	propertyValue = comobj.FormatBorder;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj.FormatBorder = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformFormatBorderNormal" Value="Ag3352xOutputFunctionArbitraryWaveformFormatBorderNormal"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformFormatBorderSwapped" Value="Ag3352xOutputFunctionArbitraryWaveformFormatBorderSwapped"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Not Supported - The byte order which will be used to make binary data point transfers in the block mode.</Description>
            </Property>
            <Property>
               <Name>InterpolationEnabled</Name>
               <Location>Channel2OutputFunctionArbitraryWaveform</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	propertyValue = comobj.InterpolationEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj.InterpolationEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationNormal" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationNormal"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationStep" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationStep"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationOff" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationOff"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The interpolation mode (Enabled or Disabled) between points in an arbitrary waveform for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Clear</Name>
               <Location>Channel2OutputFunctionArbitraryWaveform</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Clear(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction;
comobj = comobj.ArbitraryWaveform;
feature('COM_SafeArraySingleDim',1);
comobj.Clear();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method clears the contents of the volatile waveform memory.</Description>
            </Method>
            <Method>
               <Name>CreateArbSequence</Name>
               <Location>Channel2OutputFunctionArbitraryWaveform</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [ArbName, RepeatCount, PlayControl, MarkerMode, MarkerPoint] = CreateArbSequence(obj, SequenceName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction;
comobj = comobj.ArbitraryWaveform;
feature('COM_SafeArraySingleDim',1);
[ArbName, RepeatCount, PlayControl, MarkerMode, MarkerPoint] = comobj.CreateArbSequence(SequenceName, ['';''], int32([0;0]), ['';''], ['';''], int32([0;0]));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method defines a sequence of waveforms already loaded into waveform memory.</Description>
            </Method>
            <Method>
               <Name>GetCatalog</Name>
               <Location>Channel2OutputFunctionArbitraryWaveform</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetCatalog(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction;
comobj = comobj.ArbitraryWaveform;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetCatalog();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the contents of volatile waveform memory on the specified channel. Both individual arbs and sequences of arbs are returned.</Description>
            </Method>
            <Method>
               <Name>LoadArbWaveform</Name>
               <Location>Channel2OutputFunctionArbitraryWaveform</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Data] = LoadArbWaveform(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction;
comobj = comobj.ArbitraryWaveform;
feature('COM_SafeArraySingleDim',1);
[Data] = comobj.LoadArbWaveform(Name, [0;0]);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method downloads floating point values between +1 and -1 into volatile memory.</Description>
            </Method>
            <Method>
               <Name>OpenArbWaveform</Name>
               <Location>Channel2OutputFunctionArbitraryWaveform</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function OpenArbWaveform(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction;
comobj = comobj.ArbitraryWaveform;
feature('COM_SafeArraySingleDim',1);
comobj.OpenArbWaveform(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads the specified segment(.seg) or sequence(.seq) file on INTERNAL or USB memory into volatile memory for the channel specified.</Description>
            </Method>
            <Method>
               <Name>SelectArbWaveform</Name>
               <Location>Channel2OutputFunctionArbitraryWaveform</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SelectArbWaveform(obj, Name)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction;
comobj = comobj.ArbitraryWaveform;
feature('COM_SafeArraySingleDim',1);
comobj.SelectArbWaveform(Name);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method selects an Arb or Sequence which has been loaded into the waveform memory.</Description>
            </Method>
            <Method>
               <Name>StoreArbWaveform</Name>
               <Location>Channel2OutputFunctionArbitraryWaveform</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function StoreArbWaveform(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction;
comobj = comobj.ArbitraryWaveform;
feature('COM_SafeArraySingleDim',1);
comobj.StoreArbWaveform(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method stores the specified segment(.seg) or sequence(.seq) data in the channel specified volatile memory on INTERNAL or USB memory.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2OutputFunctionArbitraryWaveformAttribute</Name>
         <Description>IAg3352xOutputFunctionArbitraryWaveformAttribute interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunctionArbitraryWaveformAttribute1" Index="1"/>
         </Mappings>
         <PropertyInfo/>
         <MethodInfo>
            <Method>
               <Name>GetAverage</Name>
               <Location>Channel2OutputFunctionArbitraryWaveformAttribute</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetAverage(obj, ArbName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction;
comobj = comobj.ArbitraryWaveform;
comobj = comobj.Attribute;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetAverage(ArbName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Calculates the arithmetic average of all data points for the specified arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>GetCrestFactor</Name>
               <Location>Channel2OutputFunctionArbitraryWaveformAttribute</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetCrestFactor(obj, ArbName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction;
comobj = comobj.ArbitraryWaveform;
comobj = comobj.Attribute;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetCrestFactor(ArbName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Calculates the crest factor of all data points for the specified arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>GetDataPoints</Name>
               <Location>Channel2OutputFunctionArbitraryWaveformAttribute</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetDataPoints(obj, ArbName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction;
comobj = comobj.ArbitraryWaveform;
comobj = comobj.Attribute;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetDataPoints(ArbName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Provides the number of data points in the specified arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>GetPeakToPeak</Name>
               <Location>Channel2OutputFunctionArbitraryWaveformAttribute</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetPeakToPeak(obj, ArbName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction;
comobj = comobj.ArbitraryWaveform;
comobj = comobj.Attribute;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetPeakToPeak(ArbName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Calculates the peak-to-peak value of all data points for the specified arbitrary waveform.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2OutputFunctionArbitraryWaveformSRate</Name>
         <Description>IAg3352xOutputFunctionArbitraryWaveformSRate Interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunctionArbitraryWaveformSRate1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>SampleRate</Name>
               <Location>Channel2OutputFunctionArbitraryWaveformSRate</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj = comobj.SRate;
	propertyValue = comobj.SampleRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj = comobj.SRate;
	comobj.SampleRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The sample rate (clock frequency) in Hertz(Hz) for playback of Arbitrary Waveforms on the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunctionArbitraryWaveformSRateCoupling</Name>
         <Description>IAg3352xOutputFunctionArbitraryWaveformSRateCoupling Interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunctionArbitraryWaveformSRateCoupling1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2OutputFunctionArbitraryWaveformSRateCoupling</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj = comobj.SRate;
	comobj = comobj.Coupling;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj = comobj.SRate;
	comobj = comobj.Coupling;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Enables or Disables the sample rate coupling between channels in a two channel function generator, or allows one-time copying of the sample rate of one channel into the other channel.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2OutputFunctionArbitraryWaveformSRateCoupling</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj = comobj.SRate;
	comobj = comobj.Coupling;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj = comobj.SRate;
	comobj = comobj.Coupling;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformSRateCouplingModeOffset" Value="Ag3352xOutputFunctionArbitraryWaveformSRateCouplingModeOffset"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformSRateCouplingModeRatio" Value="Ag3352xOutputFunctionArbitraryWaveformSRateCouplingModeRatio"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of sample rate coupling between channels in a sample rate coupled state for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Offset</Name>
               <Location>Channel2OutputFunctionArbitraryWaveformSRateCoupling</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj = comobj.SRate;
	comobj = comobj.Coupling;
	propertyValue = comobj.Offset;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj = comobj.SRate;
	comobj = comobj.Coupling;
	comobj.Offset = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The sample rate offset frequency when a 2-channel function generator is in offset coupled mode.</Description>
            </Property>
            <Property>
               <Name>Ratio</Name>
               <Location>Channel2OutputFunctionArbitraryWaveformSRateCoupling</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj = comobj.SRate;
	comobj = comobj.Coupling;
	propertyValue = comobj.Ratio;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.ArbitraryWaveform;
	comobj = comobj.SRate;
	comobj = comobj.Coupling;
	comobj.Ratio = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The offset ratio between channel frequencies when a 2-channel function generator is in ratio coupled mode.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunctionNoise</Name>
         <Description>IAg3352xOutputFunctionNoise interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunctionNoise1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Bandwidth</Name>
               <Location>Channel2OutputFunctionNoise</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Noise;
	propertyValue = comobj.Bandwidth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Noise;
	comobj.Bandwidth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The bandwidth of the Noise function in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>BandwidthMax</Name>
               <Location>Channel2OutputFunctionNoise</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Noise;
	propertyValue = comobj.BandwidthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum bandwidth of the Noise function in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>BandwidthMin</Name>
               <Location>Channel2OutputFunctionNoise</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Noise;
	propertyValue = comobj.BandwidthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum bandwidth of the Noise function in Hertz(Hz) for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunctionPRBS</Name>
         <Description>IAg3352xOutputFunctionPseudoRandomNoise interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunctionPRBS1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>BitRate</Name>
               <Location>Channel2OutputFunctionPRBS</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.PRBS;
	propertyValue = comobj.BitRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.PRBS;
	comobj.BitRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Periodic Random Noise function bit rate in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>BitRateMax</Name>
               <Location>Channel2OutputFunctionPRBS</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.PRBS;
	propertyValue = comobj.BitRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum Periodic Random Noise function bit rate in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>BitRateMin</Name>
               <Location>Channel2OutputFunctionPRBS</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.PRBS;
	propertyValue = comobj.BitRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum Periodic Random Noise function bit rate in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DataFormat</Name>
               <Location>Channel2OutputFunctionPRBS</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.PRBS;
	propertyValue = comobj.DataFormat;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.PRBS;
	comobj.DataFormat = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN3" Value="Ag3352xOutputFunctionPRBSSequenceTypePN3"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN4" Value="Ag3352xOutputFunctionPRBSSequenceTypePN4"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN5" Value="Ag3352xOutputFunctionPRBSSequenceTypePN5"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN6" Value="Ag3352xOutputFunctionPRBSSequenceTypePN6"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN7" Value="Ag3352xOutputFunctionPRBSSequenceTypePN7"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN8" Value="Ag3352xOutputFunctionPRBSSequenceTypePN8"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN9" Value="Ag3352xOutputFunctionPRBSSequenceTypePN9"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN10" Value="Ag3352xOutputFunctionPRBSSequenceTypePN10"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN11" Value="Ag3352xOutputFunctionPRBSSequenceTypePN11"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN12" Value="Ag3352xOutputFunctionPRBSSequenceTypePN12"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN13" Value="Ag3352xOutputFunctionPRBSSequenceTypePN13"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN14" Value="Ag3352xOutputFunctionPRBSSequenceTypePN14"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN15" Value="Ag3352xOutputFunctionPRBSSequenceTypePN15"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN16" Value="Ag3352xOutputFunctionPRBSSequenceTypePN16"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN17" Value="Ag3352xOutputFunctionPRBSSequenceTypePN17"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN18" Value="Ag3352xOutputFunctionPRBSSequenceTypePN18"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN19" Value="Ag3352xOutputFunctionPRBSSequenceTypePN19"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN20" Value="Ag3352xOutputFunctionPRBSSequenceTypePN20"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN21" Value="Ag3352xOutputFunctionPRBSSequenceTypePN21"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN22" Value="Ag3352xOutputFunctionPRBSSequenceTypePN22"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN23" Value="Ag3352xOutputFunctionPRBSSequenceTypePN23"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN24" Value="Ag3352xOutputFunctionPRBSSequenceTypePN24"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN25" Value="Ag3352xOutputFunctionPRBSSequenceTypePN25"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN26" Value="Ag3352xOutputFunctionPRBSSequenceTypePN26"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN27" Value="Ag3352xOutputFunctionPRBSSequenceTypePN27"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN28" Value="Ag3352xOutputFunctionPRBSSequenceTypePN28"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN29" Value="Ag3352xOutputFunctionPRBSSequenceTypePN29"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN30" Value="Ag3352xOutputFunctionPRBSSequenceTypePN30"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN31" Value="Ag3352xOutputFunctionPRBSSequenceTypePN31"/>
                     <Enum Name="Ag3352xOutputFunctionPRBSSequenceTypePN32" Value="Ag3352xOutputFunctionPRBSSequenceTypePN32"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Periodic Random Noise sequence length for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunctionPRBSTransition</Name>
         <Description>IAg3352xOutputFunctionPRBSTransition interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunctionPRBSTransition1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>EdgeTime</Name>
               <Location>Channel2OutputFunctionPRBSTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.PRBS;
	comobj = comobj.Transition;
	propertyValue = comobj.EdgeTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.PRBS;
	comobj = comobj.Transition;
	comobj.EdgeTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse edge time in seconds on both edges of a pulse on the specified channel.</Description>
            </Property>
            <Property>
               <Name>EdgeTimeMax</Name>
               <Location>Channel2OutputFunctionPRBSTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.PRBS;
	comobj = comobj.Transition;
	propertyValue = comobj.EdgeTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum pulse edge time in seconds on both edges of a pulse on the specified channel.</Description>
            </Property>
            <Property>
               <Name>EdgeTimeMin</Name>
               <Location>Channel2OutputFunctionPRBSTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.PRBS;
	comobj = comobj.Transition;
	propertyValue = comobj.EdgeTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum pulse edge time in seconds on both edges of a pulse on the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunctionPulse</Name>
         <Description>IAg3352xOutputFunctionPulse interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunctionPulse1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>DutyCycle</Name>
               <Location>Channel2OutputFunctionPulse</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	propertyValue = comobj.DutyCycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj.DutyCycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse duty cycle in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DutyCycleMax</Name>
               <Location>Channel2OutputFunctionPulse</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	propertyValue = comobj.DutyCycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum pulse duty cycle in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DutyCycleMin</Name>
               <Location>Channel2OutputFunctionPulse</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	propertyValue = comobj.DutyCycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum pulse duty cycle in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Period</Name>
               <Location>Channel2OutputFunctionPulse</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	propertyValue = comobj.Period;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj.Period = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse period in seconds on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PeriodMax</Name>
               <Location>Channel2OutputFunctionPulse</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	propertyValue = comobj.PeriodMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum pulse period in seconds on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PeriodMin</Name>
               <Location>Channel2OutputFunctionPulse</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	propertyValue = comobj.PeriodMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum pulse period in seconds on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Width</Name>
               <Location>Channel2OutputFunctionPulse</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	propertyValue = comobj.Width;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj.Width = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse width in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>WidthMax</Name>
               <Location>Channel2OutputFunctionPulse</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	propertyValue = comobj.WidthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum pulse width in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>WidthMin</Name>
               <Location>Channel2OutputFunctionPulse</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	propertyValue = comobj.WidthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum pulse width in seconds for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunctionPulseTransition</Name>
         <Description>IAg3352xOutputFunctionPulseTransition interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunctionPulseTransition1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>EdgeTime</Name>
               <Location>Channel2OutputFunctionPulseTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	propertyValue = comobj.EdgeTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	comobj.EdgeTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse edge time in seconds on both edges of a pulse on the specified channel.</Description>
            </Property>
            <Property>
               <Name>EdgeTimeMax</Name>
               <Location>Channel2OutputFunctionPulseTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	propertyValue = comobj.EdgeTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum pulse edge time in seconds on both edges of a pulse on the specified channel.</Description>
            </Property>
            <Property>
               <Name>EdgeTimeMin</Name>
               <Location>Channel2OutputFunctionPulseTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	propertyValue = comobj.EdgeTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum pulse edge time in seconds on both edges of a pulse on the specified channel.</Description>
            </Property>
            <Property>
               <Name>LeadingEdgeTime</Name>
               <Location>Channel2OutputFunctionPulseTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	propertyValue = comobj.LeadingEdgeTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	comobj.LeadingEdgeTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse edge time in seconds on the leading edge of a pulse on the specified channel.</Description>
            </Property>
            <Property>
               <Name>LeadingEdgeTimeMax</Name>
               <Location>Channel2OutputFunctionPulseTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	propertyValue = comobj.LeadingEdgeTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum pulse edge time in seconds on the leading edge of a pulse on the specified channel.</Description>
            </Property>
            <Property>
               <Name>LeadingEdgeTimeMin</Name>
               <Location>Channel2OutputFunctionPulseTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	propertyValue = comobj.LeadingEdgeTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum pulse edge time in seconds on the leading edge of a pulse on the specified channel.</Description>
            </Property>
            <Property>
               <Name>TrailingEdgeTime</Name>
               <Location>Channel2OutputFunctionPulseTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	propertyValue = comobj.TrailingEdgeTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	comobj.TrailingEdgeTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse edge time in seconds on the trailing edge of a pulse on the specified channel.</Description>
            </Property>
            <Property>
               <Name>TrailingEdgeTimeMax</Name>
               <Location>Channel2OutputFunctionPulseTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	propertyValue = comobj.TrailingEdgeTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum pulse edge time in seconds on the trailing edge of a pulse on the specified channel.</Description>
            </Property>
            <Property>
               <Name>TrailingEdgeTimeMin</Name>
               <Location>Channel2OutputFunctionPulseTransition</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Pulse;
	comobj = comobj.Transition;
	propertyValue = comobj.TrailingEdgeTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum pulse edge time in seconds on the trailing edge of a pulse on the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunctionRamp</Name>
         <Description>IAg3352xOutputFunctionRamp interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunctionRamp1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Symmetry</Name>
               <Location>Channel2OutputFunctionRamp</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Ramp;
	propertyValue = comobj.Symmetry;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Ramp;
	comobj.Symmetry = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The symmetry percentage for ramp waves on the specified channel.</Description>
            </Property>
            <Property>
               <Name>SymmetryMax</Name>
               <Location>Channel2OutputFunctionRamp</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Ramp;
	propertyValue = comobj.SymmetryMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum symmetry percentage for ramp waves on the specified channel.</Description>
            </Property>
            <Property>
               <Name>SymmetryMin</Name>
               <Location>Channel2OutputFunctionRamp</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Ramp;
	propertyValue = comobj.SymmetryMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum symmetry percentage for ramp waves on the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputFunctionSquare</Name>
         <Description>IAg3352xOutputFunctionSquare interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputFunctionSquare1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>DutyCycle</Name>
               <Location>Channel2OutputFunctionSquare</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Square;
	propertyValue = comobj.DutyCycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Square;
	comobj.DutyCycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The duty cycle percentage for square waves on the specified channel.</Description>
            </Property>
            <Property>
               <Name>DutyCycleMax</Name>
               <Location>Channel2OutputFunctionSquare</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Square;
	propertyValue = comobj.DutyCycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum duty cycle percentage for square waves on the specified channel.</Description>
            </Property>
            <Property>
               <Name>DutyCycleMin</Name>
               <Location>Channel2OutputFunctionSquare</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Square;
	propertyValue = comobj.DutyCycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum duty cycle percentage for square waves on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Period</Name>
               <Location>Channel2OutputFunctionSquare</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Square;
	propertyValue = comobj.Period;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Square;
	comobj.Period = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse period in seconds on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PeriodMax</Name>
               <Location>Channel2OutputFunctionSquare</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Square;
	propertyValue = comobj.PeriodMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum pulse period in seconds on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PeriodMin</Name>
               <Location>Channel2OutputFunctionSquare</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj = comobj.Square;
	propertyValue = comobj.PeriodMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum pulse period in seconds on the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputList</Name>
         <Description>IAg3352xOutputList interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputList1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>DwellTime</Name>
               <Location>Channel2OutputList</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.List;
	propertyValue = comobj.DwellTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.List;
	comobj.DwellTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The dwell time, which is the amount of time each frequency in a frequency list is generated for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DwellTimeMax</Name>
               <Location>Channel2OutputList</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.List;
	propertyValue = comobj.DwellTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only: Maximum Dwell Time</Description>
            </Property>
            <Property>
               <Name>DwellTimeMin</Name>
               <Location>Channel2OutputList</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.List;
	propertyValue = comobj.DwellTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only: Minimum Dwell Time.</Description>
            </Property>
            <Property>
               <Name>FrequencyPoints</Name>
               <Location>Channel2OutputList</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.List;
	propertyValue = comobj.FrequencyPoints;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The number of frequencies that are in the current frequency list for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyPointsMax</Name>
               <Location>Channel2OutputList</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.List;
	propertyValue = comobj.FrequencyPointsMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum number of frequencies that are in the current frequency list for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyPointsMin</Name>
               <Location>Channel2OutputList</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.List;
	propertyValue = comobj.FrequencyPointsMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum number of frequencies that are in the current frequency list for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>GetFreqencyList</Name>
               <Location>Channel2OutputList</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [FreqList] = GetFreqencyList(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output;
comobj = comobj.List;
feature('COM_SafeArraySingleDim',1);
[FreqList] = comobj.GetFreqencyList([0;0]);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Get the frequency values in frequency list for the specified channel.</Description>
            </Method>
            <Method>
               <Name>SetFrequencyList</Name>
               <Location>Channel2OutputList</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetFrequencyList(obj, Frequency)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output;
comobj = comobj.List;
feature('COM_SafeArraySingleDim',1);
comobj.SetFrequencyList(Frequency);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the frequency values in frequency list for the specified channel.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2OutputSync</Name>
         <Description>IAg3352xOutputSync interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputSync1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2OutputSync</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Sync;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Sync;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel Sync connector state (Enabled or Disabled).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel2OutputSync</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Sync;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Sync;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputSyncModeNormal" Value="Ag3352xOutputSyncModeNormal"/>
                     <Enum Name="Ag3352xOutputSyncModeCarrier" Value="Ag3352xOutputSyncModeCarrier"/>
                     <Enum Name="Ag3352xOutputSyncModeMarker" Value="Ag3352xOutputSyncModeMarker"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The output Sync mode Normal, Carrier or Marker.</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel2OutputSync</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Sync;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Sync;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputSyncPolarityNormal" Value="Ag3352xOutputSyncPolarityNormal"/>
                     <Enum Name="Ag3352xOutputSyncPolarityInverted" Value="Ag3352xOutputSyncPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output polarity of the SYNC output connector.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2OutputSync</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Sync;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Sync;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputSyncSourceChannel1" Value="Ag3352xOutputSyncSourceChannel1"/>
                     <Enum Name="Ag3352xOutputSyncSourceChannel2" Value="Ag3352xOutputSyncSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source for the SYNC output connector to either channel 1 or channel 2 of a two channel instrument.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputVoltage</Name>
         <Description>IAg3352xOutputVoltage interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputVoltage1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Amplitude</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	propertyValue = comobj.Amplitude;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj.Amplitude = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The output amplitude in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>AmplitudeMax</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	propertyValue = comobj.AmplitudeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output amplitude in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>AmplitudeMin</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	propertyValue = comobj.AmplitudeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output amplitude in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>AutoRangingEnabled</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	propertyValue = comobj.AutoRangingEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj.AutoRangingEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The voltage autoranging state for all functions for the specified channel.</Description>
            </Property>
            <Property>
               <Name>High</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	propertyValue = comobj.High;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj.High = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The high voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>HighMax</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	propertyValue = comobj.HighMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum high voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>HighMin</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	propertyValue = comobj.HighMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum high voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Low</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	propertyValue = comobj.Low;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj.Low = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The low voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>LowMax</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	propertyValue = comobj.LowMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum low voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>LowMin</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	propertyValue = comobj.LowMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum low voltage level in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Units</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	propertyValue = comobj.Units;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj.Units = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputVoltageUnitVpp" Value="Ag3352xOutputVoltageUnitVpp"/>
                     <Enum Name="Ag3352xOutputVoltageUnitVrms" Value="Ag3352xOutputVoltageUnitVrms"/>
                     <Enum Name="Ag3352xOutputVoltageUnitDbm" Value="Ag3352xOutputVoltageUnitDbm"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The unit for output amplitude for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>AutoRangingOnce</Name>
               <Location>Channel2OutputVoltage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function AutoRangingOnce(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output;
comobj = comobj.Voltage;
feature('COM_SafeArraySingleDim',1);
comobj.AutoRangingOnce();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the autoranging ON, and then OFF.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2OutputVoltageLimit</Name>
         <Description>IAg3352xOutputVoltageLimit interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputVoltageLimit1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2OutputVoltageLimit</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Limit;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Limit;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The output amplitude limits state (OFF or ON).</Description>
            </Property>
            <Property>
               <Name>High</Name>
               <Location>Channel2OutputVoltageLimit</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Limit;
	propertyValue = comobj.High;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Limit;
	comobj.High = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The positive limit voltage in volts for the output amplitude of the specified channel.</Description>
            </Property>
            <Property>
               <Name>HighMax</Name>
               <Location>Channel2OutputVoltageLimit</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Limit;
	propertyValue = comobj.HighMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum positive limit voltage in volts for the output amplitude of the specified channel.</Description>
            </Property>
            <Property>
               <Name>HighMin</Name>
               <Location>Channel2OutputVoltageLimit</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Limit;
	propertyValue = comobj.HighMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum positive limit voltage in volts for the output amplitude of the specified channel.</Description>
            </Property>
            <Property>
               <Name>Low</Name>
               <Location>Channel2OutputVoltageLimit</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Limit;
	propertyValue = comobj.Low;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Limit;
	comobj.Low = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The negative limit voltage in volts for the output amplitude of the specified channel.</Description>
            </Property>
            <Property>
               <Name>LowMax</Name>
               <Location>Channel2OutputVoltageLimit</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Limit;
	propertyValue = comobj.LowMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum negative limit voltage in volts for the output amplitude of the specified channel.</Description>
            </Property>
            <Property>
               <Name>LowMin</Name>
               <Location>Channel2OutputVoltageLimit</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Limit;
	propertyValue = comobj.LowMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum negative limit voltage in volts for the output amplitude of the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2OutputVoltageOffset</Name>
         <Description>IAg3352xOutputVoltageOffset interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2OutputVoltageOffset1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>DCOffset</Name>
               <Location>Channel2OutputVoltageOffset</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Offset;
	propertyValue = comobj.DCOffset;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Offset;
	comobj.DCOffset = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The DC offset voltage in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DCOffsetMax</Name>
               <Location>Channel2OutputVoltageOffset</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Offset;
	propertyValue = comobj.DCOffsetMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum DC offset voltage in volts for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DCOffsetMin</Name>
               <Location>Channel2OutputVoltageOffset</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj = comobj.Voltage;
	comobj = comobj.Offset;
	propertyValue = comobj.DCOffsetMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum DC offset voltage in volts for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2PhaseLock</Name>
         <Description>IAg3352xPhaseLock interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2PhaseLock1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The degrees or radians as the angle units.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The degrees or radians as the angle units.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The degrees or radians as the angle units.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The degrees or radians as the angle units.</Description>
            </Property>
            <Property>
               <Name>UnlockErrorEnabled</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.UnlockErrorEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.UnlockErrorEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The function generator state to generate the phase-lock error.</Description>
            </Property>
            <Property>
               <Name>UnlockErrorEnabled</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.UnlockErrorEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.UnlockErrorEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The function generator state to generate the phase-lock error.</Description>
            </Property>
            <Property>
               <Name>UnlockErrorEnabled</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.UnlockErrorEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.UnlockErrorEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The function generator state to generate the phase-lock error.</Description>
            </Property>
            <Property>
               <Name>UnlockErrorEnabled</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.UnlockErrorEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.UnlockErrorEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The function generator state to generate the phase-lock error.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Reference</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Reference(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.Reference();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately sets a new zero-phase reference point (for the specified channel) without changing the output of the function generator.</Description>
            </Method>
            <Method>
               <Name>Reference</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Reference(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.Reference();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately sets a new zero-phase reference point (for the specified channel) without changing the output of the function generator.</Description>
            </Method>
            <Method>
               <Name>Reference</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Reference(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.Reference();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately sets a new zero-phase reference point (for the specified channel) without changing the output of the function generator.</Description>
            </Method>
            <Method>
               <Name>Reference</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Reference(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.Reference();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately sets a new zero-phase reference point (for the specified channel) without changing the output of the function generator.</Description>
            </Method>
            <Method>
               <Name>SynchronizeChannels</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeChannels(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeChannels();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately changes the phase of Channel 2 to match the phase of Channel 1 and sets both channels' zero phase reference points to zero degrees.</Description>
            </Method>
            <Method>
               <Name>SynchronizeChannels</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeChannels(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeChannels();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately changes the phase of Channel 2 to match the phase of Channel 1 and sets both channels' zero phase reference points to zero degrees.</Description>
            </Method>
            <Method>
               <Name>SynchronizeChannels</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeChannels(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeChannels();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately changes the phase of Channel 2 to match the phase of Channel 1 and sets both channels' zero phase reference points to zero degrees.</Description>
            </Method>
            <Method>
               <Name>SynchronizeChannels</Name>
               <Location>Channel2PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeChannels(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeChannels();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately changes the phase of Channel 2 to match the phase of Channel 1 and sets both channels' zero phase reference points to zero degrees.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2PhaseLockReferenceOscillator</Name>
         <Description>IAg3352xReferenceOscillator interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2PhaseLockReferenceOscillator1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>AutoEnabled</Name>
               <Location>Channel2PhaseLockReferenceOscillator</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj = comobj.ReferenceOscillator;
	propertyValue = comobj.AutoEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj = comobj.ReferenceOscillator;
	comobj.AutoEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Automatic reference source selection.</Description>
            </Property>
            <Property>
               <Name>CurrentSource</Name>
               <Location>Channel2PhaseLockReferenceOscillator</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj = comobj.ReferenceOscillator;
	propertyValue = comobj.CurrentSource;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xReferenceOscillatorSourceInternal" Value="Ag3352xReferenceOscillatorSourceInternal"/>
                     <Enum Name="Ag3352xReferenceOscillatorSourceExternal" Value="Ag3352xReferenceOscillatorSourceExternal"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The current reference source.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2PhaseLockReferenceOscillator</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj = comobj.ReferenceOscillator;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj = comobj.ReferenceOscillator;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xReferenceOscillatorSourceInternal" Value="Ag3352xReferenceOscillatorSourceInternal"/>
                     <Enum Name="Ag3352xReferenceOscillatorSourceExternal" Value="Ag3352xReferenceOscillatorSourceExternal"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source for the signal used as a frequency/phase reference for frequency and phase of all signals generated by the instrument.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2PM</Name>
         <Description>IAg3352xPM interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2PM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2PWM</Name>
         <Description>IAg3352xPWM interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2PWM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycle</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.DeviationDutyCycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycle</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.DeviationDutyCycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycle</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.DeviationDutyCycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycle</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.DeviationDutyCycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PWM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PWM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PWM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PWM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) at which the output pulse width 'shifts' through its pulse width deviation for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) at which the output pulse width 'shifts' through its pulse width deviation for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) at which the output pulse width 'shifts' through its pulse width deviation for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) at which the output pulse width 'shifts' through its pulse width deviation for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform on the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform on the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform on the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2SumModulation</Name>
         <Description>IAg3352xSumModulation interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2SumModulation1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Combine</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Combine;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Combine = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xCombineChannel1" Value="Ag3352xCombineChannel1"/>
                     <Enum Name="Ag3352xCombineChannel2" Value="Ag3352xCombineChannel2"/>
                     <Enum Name="Ag3352xCombineNone" Value="Ag3352xCombineNone"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Combines the output from two channels of a 33522A two-channel function generator into a single channel connector.</Description>
            </Property>
            <Property>
               <Name>Combine</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Combine;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Combine = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xCombineChannel1" Value="Ag3352xCombineChannel1"/>
                     <Enum Name="Ag3352xCombineChannel2" Value="Ag3352xCombineChannel2"/>
                     <Enum Name="Ag3352xCombineNone" Value="Ag3352xCombineNone"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Combines the output from two channels of a 33522A two-channel function generator into a single channel connector.</Description>
            </Property>
            <Property>
               <Name>Combine</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Combine;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Combine = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xCombineChannel1" Value="Ag3352xCombineChannel1"/>
                     <Enum Name="Ag3352xCombineChannel2" Value="Ag3352xCombineChannel2"/>
                     <Enum Name="Ag3352xCombineNone" Value="Ag3352xCombineNone"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Combines the output from two channels of a 33522A two-channel function generator into a single channel connector.</Description>
            </Property>
            <Property>
               <Name>Combine</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Combine;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Combine = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xCombineChannel1" Value="Ag3352xCombineChannel1"/>
                     <Enum Name="Ag3352xCombineChannel2" Value="Ag3352xCombineChannel2"/>
                     <Enum Name="Ag3352xCombineNone" Value="Ag3352xCombineNone"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Combines the output from two channels of a 33522A two-channel function generator into a single channel connector.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The SUM modulation state (enabled or disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The SUM modulation state (enabled or disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The SUM modulation state (enabled or disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The SUM modulation state (enabled or disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepth</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalDepth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepth</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalDepth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepth</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalDepth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepth</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalDepth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMax</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMax</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMax</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMax</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMin</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMin</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMin</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMin</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) of the summing waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) of the summing waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) of the summing waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) of the summing waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum frequency in Hertz (Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum frequency in Hertz (Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum frequency in Hertz (Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum frequency in Hertz (Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz(Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz(Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz(Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz(Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the summing waveform (the waveform added to the primary waveform using the SUM command subsystem) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the summing waveform (the waveform added to the primary waveform using the SUM command subsystem) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the summing waveform (the waveform added to the primary waveform using the SUM command subsystem) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the summing waveform (the waveform added to the primary waveform using the SUM command subsystem) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the summing signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the summing signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the summing signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the summing signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2Sweep</Name>
         <Description>IAg3352xSweep interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2Sweep1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The sweep mode (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The sweep mode (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The sweep mode (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The sweep mode (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTime</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.HoldTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTime</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.HoldTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTime</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.HoldTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTime</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.HoldTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTime</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.ReturnTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTime</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.ReturnTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTime</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.ReturnTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTime</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.ReturnTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Spacing</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Spacing;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Spacing = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xSweepSpacingLinear" Value="Ag3352xSweepSpacingLinear"/>
                     <Enum Name="Ag3352xSweepSpacingLogarithmic" Value="Ag3352xSweepSpacingLogarithmic"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The linear or logarithmic spacing for the frequency sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Spacing</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Spacing;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Spacing = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xSweepSpacingLinear" Value="Ag3352xSweepSpacingLinear"/>
                     <Enum Name="Ag3352xSweepSpacingLogarithmic" Value="Ag3352xSweepSpacingLogarithmic"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The linear or logarithmic spacing for the frequency sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Spacing</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Spacing;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Spacing = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xSweepSpacingLinear" Value="Ag3352xSweepSpacingLinear"/>
                     <Enum Name="Ag3352xSweepSpacingLogarithmic" Value="Ag3352xSweepSpacingLogarithmic"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The linear or logarithmic spacing for the frequency sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Spacing</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Spacing;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Spacing = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xSweepSpacingLinear" Value="Ag3352xSweepSpacingLinear"/>
                     <Enum Name="Ag3352xSweepSpacingLogarithmic" Value="Ag3352xSweepSpacingLogarithmic"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The linear or logarithmic spacing for the frequency sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Time</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Time;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Time = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Time</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Time;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Time = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Time</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Time;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Time = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Time</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Time;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Time = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMax</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMin</Name>
               <Location>Channel2Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2SweepFrequency</Name>
         <Description>IAg3352xSweepFrequency interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2SweepFrequency1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Center</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.Center;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	comobj.Center = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The center frequency in Hertz (Hz) for a frequency sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CenterMax</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.CenterMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum center frequency in Hertz (Hz) for a frequency sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CenterMin</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.CenterMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum center frequency in Hertz (Hz) for a frequency sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Span</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.Span;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	comobj.Span = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency span in Hertz (Hz) for a frequency sweep.</Description>
            </Property>
            <Property>
               <Name>SpanMax</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.SpanMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum frequency span in Hertz (Hz) for a frequency sweep.</Description>
            </Property>
            <Property>
               <Name>SpanMin</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.SpanMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum frequency span in Hertz (Hz) for a frequency sweep.</Description>
            </Property>
            <Property>
               <Name>Start</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.Start;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	comobj.Start = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The start frequency in Hertz (Hz) for a frequency sweep.</Description>
            </Property>
            <Property>
               <Name>StartMax</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.StartMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum start frequency in Hertz (Hz) for a frequency sweep.</Description>
            </Property>
            <Property>
               <Name>StartMin</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.StartMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum start frequency in Hertz (Hz) for a frequency sweep.</Description>
            </Property>
            <Property>
               <Name>Stop</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.Stop;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	comobj.Stop = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The stop frequency in Hertz (Hz) for a frequency sweep.</Description>
            </Property>
            <Property>
               <Name>StopMax</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.StopMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum stop frequency in Hertz (Hz) for a frequency sweep.</Description>
            </Property>
            <Property>
               <Name>StopMin</Name>
               <Location>Channel2SweepFrequency</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj = comobj.Frequency;
	propertyValue = comobj.StopMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum stop frequency in Hertz (Hz) for a frequency sweep.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel2Trigger</Name>
         <Description>IAg3352xTrigger interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2Trigger1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Count</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Abort</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel2Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2Trigger2</Name>
         <Description>IAg3352xTrigger2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2Trigger21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Count</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Timer</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Timer;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Timer = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets the timer used when Source is set to Ag3352xTriggerSourceTimer.</Description>
            </Property>
            <Property>
               <Name>Timer</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Timer;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Timer = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets the timer used when Source is set to Ag3352xTriggerSourceTimer.</Description>
            </Property>
            <Property>
               <Name>TimerMax</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.TimerMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the maximum value (in seconds) the timer can be set to.</Description>
            </Property>
            <Property>
               <Name>TimerMax</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.TimerMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the maximum value (in seconds) the timer can be set to.</Description>
            </Property>
            <Property>
               <Name>TimerMin</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.TimerMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the minimum value (in seconds) the timer can be set to.</Description>
            </Property>
            <Property>
               <Name>TimerMin</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.TimerMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the minimum value (in seconds) the timer can be set to.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Abort</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel2Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel2TriggerOutputTrigger</Name>
         <Description>IAg3352xOutputTrigger interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel2TriggerOutputTrigger1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel2TriggerOutputTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj = comobj.OutputTrigger;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj = comobj.OutputTrigger;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The 'trigger out' signal Enabled or Disabled.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel2TriggerOutputTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj = comobj.OutputTrigger;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj = comobj.OutputTrigger;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputTriggerSlopePositive" Value="Ag3352xOutputTriggerSlopePositive"/>
                     <Enum Name="Ag3352xOutputTriggerSlopeNegative" Value="Ag3352xOutputTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger out signal slope.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3</Name>
         <Description>IAg3352xChannel3 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel31" Index="1"/>
         </Mappings>
         <PropertyInfo/>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3AM</Name>
         <Description>IAg3352xAM interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3AM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Depth</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Depth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Depth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Depth</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Depth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Depth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMax</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMax</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMin</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMin</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>AM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>AM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of the frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of the frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of the frequency in Hertz(Hz) of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of the frequency in Hertz(Hz) of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xAMModeDSSC" Value="Ag3352xAMModeDSSC"/>
                     <Enum Name="Ag3352xAMModeNormal" Value="Ag3352xAMModeNormal"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Amplitude Modulation mode Double Sideband Suppressed Carrier (ON) or AM modulated carrier with sidebands (OFF) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xAMModeDSSC" Value="Ag3352xAMModeDSSC"/>
                     <Enum Name="Ag3352xAMModeNormal" Value="Ag3352xAMModeNormal"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Amplitude Modulation mode Double Sideband Suppressed Carrier (ON) or AM modulated carrier with sidebands (OFF) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3AM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3Apply</Name>
         <Description>IAg3352xApply interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Apply1" Index="1"/>
         </Mappings>
         <PropertyInfo/>
         <MethodInfo>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel3Apply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3Apply2</Name>
         <Description>IAg3352xApply2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Apply21" Index="1"/>
         </Mappings>
         <PropertyInfo/>
         <MethodInfo>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetTriangle</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetTriangle(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetTriangle(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a triangle wave with the specified frequency, amplitude, and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetTriangle</Name>
               <Location>Channel3Apply2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetTriangle(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply2;
feature('COM_SafeArraySingleDim',1);
comobj.SetTriangle(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a triangle wave with the specified frequency, amplitude, and dc offset.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3BPSK</Name>
         <Description>IAg3352xBPSK interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3BPSK1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>BPSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>BPSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output phase 'shifts' between the carrier and offset phase for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output phase 'shifts' between the carrier and offset phase for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The BPSK source for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3BPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The BPSK source for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3Burst</Name>
         <Description>IAg3352xBurst interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Burst1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Disables (false) or enables (true) the burst mode.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Disables (false) or enables (true) the burst mode.</Description>
            </Property>
            <Property>
               <Name>GatePolarity</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.GatePolarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.GatePolarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstGatePolarityNormal" Value="Ag3352xBurstGatePolarityNormal"/>
                     <Enum Name="Ag3352xBurstGatePolarityInverted" Value="Ag3352xBurstGatePolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Logic levels on the rear-panel Trig In connector for an externally-gated burst.</Description>
            </Property>
            <Property>
               <Name>GatePolarity</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.GatePolarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.GatePolarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstGatePolarityNormal" Value="Ag3352xBurstGatePolarityNormal"/>
                     <Enum Name="Ag3352xBurstGatePolarityInverted" Value="Ag3352xBurstGatePolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Logic levels on the rear-panel Trig In connector for an externally-gated burst.</Description>
            </Property>
            <Property>
               <Name>InternalPeriod</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriod;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.InternalPeriod = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriod</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriod;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.InternalPeriod = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMax</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMax</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMin</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMin</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstModeTriggered" Value="Ag3352xBurstModeTriggered"/>
                     <Enum Name="Ag3352xBurstModeGated" Value="Ag3352xBurstModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst mode triggered or gated.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstModeTriggered" Value="Ag3352xBurstModeTriggered"/>
                     <Enum Name="Ag3352xBurstModeGated" Value="Ag3352xBurstModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst mode triggered or gated.</Description>
            </Property>
            <Property>
               <Name>NumberOfCycles</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCycles;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.NumberOfCycles = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCycles</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCycles;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.NumberOfCycles = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMax</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMax</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMin</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMin</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Degrees or radians to set the starting phase for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Degrees or radians to set the starting phase for the burst.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>SetNumberOfCyclesInfinity</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNumberOfCyclesInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Burst;
feature('COM_SafeArraySingleDim',1);
comobj.SetNumberOfCyclesInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the number of cycles to be output per burst (triggered burst mode only).</Description>
            </Method>
            <Method>
               <Name>SetNumberOfCyclesInfinity</Name>
               <Location>Channel3Burst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNumberOfCyclesInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Burst;
feature('COM_SafeArraySingleDim',1);
comobj.SetNumberOfCyclesInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the number of cycles to be output per burst (triggered burst mode only).</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3FM</Name>
         <Description>IAg3352xFM interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3FM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3FM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3FSK</Name>
         <Description>IAg3352xFSK interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3FSK1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK source.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3FSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK source.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3Marker</Name>
         <Description>IAg3352xMarker interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Marker1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Cycle</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Cycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Cycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Cycle</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Cycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Cycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMax</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMax</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMin</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMin</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Point</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Point;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Point = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Point</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Point;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Point = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMax</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMax</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMin</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMin</Name>
               <Location>Channel3Marker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3Output</Name>
         <Description>IAg3352xOutput interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Output1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel3Output</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3Output2</Name>
         <Description>IAg3352xOutput2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Output21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output2;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output2;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output2;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output2;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel3Output2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output2;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3Output3</Name>
         <Description>IAg3352xOutput3 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Output31" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output3;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output3;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>Channel3Output3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output3;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3OutputFunction</Name>
         <Description>IAg3352xOutputFunction interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3OutputFunction1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Function</Name>
               <Location>Channel3OutputFunction</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>Channel3OutputFunction</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3OutputFunction2</Name>
         <Description>IAg3352xOutputFunction2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3OutputFunction21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Function</Name>
               <Location>Channel3OutputFunction2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>Channel3OutputFunction2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>Channel3OutputFunction2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>Channel3OutputFunction2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction2;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3OutputFunction3</Name>
         <Description>IAg3352xOutputFunction3 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3OutputFunction31" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Function</Name>
               <Location>Channel3OutputFunction3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>Channel3OutputFunction3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3OutputFunction3ArbitraryWaveform3</Name>
         <Description>IAg3352xOutputFunctionArbitraryWaveform3 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3OutputFunction3ArbitraryWaveform31" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>AdvanceClockSource</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.AdvanceClockSource;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.AdvanceClockSource = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformAdvanceClockSourceTrigger" Value="Ag3352xOutputFunctionArbitraryWaveformAdvanceClockSourceTrigger"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryAdvanceClockSRate" Value="Ag3352xOutputFunctionArbitraryAdvanceClockSRate"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The point advance clock source for the 33521A/33522A instrument's Arbitrary waveform playback.</Description>
            </Property>
            <Property>
               <Name>AdvanceClockSource</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.AdvanceClockSource;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.AdvanceClockSource = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformAdvanceClockSourceTrigger" Value="Ag3352xOutputFunctionArbitraryWaveformAdvanceClockSourceTrigger"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryAdvanceClockSRate" Value="Ag3352xOutputFunctionArbitraryAdvanceClockSRate"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The point advance clock source for the 33521A/33522A instrument's Arbitrary waveform playback.</Description>
            </Property>
            <Property>
               <Name>FormatBorder</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.FormatBorder;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.FormatBorder = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformFormatBorderNormal" Value="Ag3352xOutputFunctionArbitraryWaveformFormatBorderNormal"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformFormatBorderSwapped" Value="Ag3352xOutputFunctionArbitraryWaveformFormatBorderSwapped"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Not Supported - The byte order which will be used to make binary data point transfers in the block mode.</Description>
            </Property>
            <Property>
               <Name>FormatBorder</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.FormatBorder;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.FormatBorder = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformFormatBorderNormal" Value="Ag3352xOutputFunctionArbitraryWaveformFormatBorderNormal"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformFormatBorderSwapped" Value="Ag3352xOutputFunctionArbitraryWaveformFormatBorderSwapped"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Not Supported - The byte order which will be used to make binary data point transfers in the block mode.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets the frequency for the arbitrary waveform.</Description>
            </Property>
            <Property>
               <Name>InterpolationEnabled</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.InterpolationEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.InterpolationEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationNormal" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationNormal"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationStep" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationStep"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationOff" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationOff"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The interpolation mode (Enabled or Disabled) between points in an arbitrary waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InterpolationEnabled</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.InterpolationEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.InterpolationEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationNormal" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationNormal"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationStep" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationStep"/>
                     <Enum Name="Ag3352xOutputFunctionArbitraryWaveformInterpolationOff" Value="Ag3352xOutputFunctionArbitraryWaveformInterpolationOff"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The interpolation mode (Enabled or Disabled) between points in an arbitrary waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>NumberOfPoint</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.NumberOfPoint;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -. Number of points in the currently selected arbitrary waveform.</Description>
            </Property>
            <Property>
               <Name>Period</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.Period;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.Period = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets or gets the period for the arbitrary waveform.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets or gets an offset into the current selected arbitrary waveform in terms of degrees, radians, seconds or samples.</Description>
            </Property>
            <Property>
               <Name>PhaseUnit</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.PhaseUnit;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.PhaseUnit = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xArbitraryWaveformAngleUnitDegree" Value="Ag3352xArbitraryWaveformAngleUnitDegree"/>
                     <Enum Name="Ag3352xArbitraryWaveformAngleUnitRadian" Value="Ag3352xArbitraryWaveformAngleUnitRadian"/>
                     <Enum Name="Ag3352xArbitraryWaveformAngleUnitSecond" Value="Ag3352xArbitraryWaveformAngleUnitSecond"/>
                     <Enum Name="Ag3352xArbitraryWaveformAngleUnitSample" Value="Ag3352xArbitraryWaveformAngleUnitSample"/>
                     <Enum Name="Ag3352xArbitraryWaveformAngleUnitDefault" Value="Ag3352xArbitraryWaveformAngleUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets or gets the units for specification of arbitrary waveform phase.</Description>
            </Property>
            <Property>
               <Name>SelectedWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.SelectedWaveform;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the name of the currently selected waveform in memory for the specified channel.</Description>
            </Property>
            <Property>
               <Name>SelectedWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.SelectedWaveform;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the name of the currently selected waveform in memory for the specified channel.</Description>
            </Property>
            <Property>
               <Name>SymmetricAmplitude</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.SymmetricAmplitude;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.SymmetricAmplitude = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Setting this property allows you to bind a specific peak-to-peak voltage to any Arb selected by the SelectArbWaveform method.</Description>
            </Property>
            <Property>
               <Name>SymmetricAmplitude</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	propertyValue = comobj.SymmetricAmplitude;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction3;
	comobj = comobj.ArbitraryWaveform3;
	comobj.SymmetricAmplitude = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Setting this property allows you to bind a specific peak-to-peak voltage to any Arb selected by the SelectArbWaveform method.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Clear</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Clear(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.Clear();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method clears the contents of the volatile waveform memory.</Description>
            </Method>
            <Method>
               <Name>Clear</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Clear(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.Clear();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method clears the contents of the volatile waveform memory.</Description>
            </Method>
            <Method>
               <Name>CreateArbSequence</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [ArbName, RepeatCount, PlayControl, MarkerMode, MarkerPoint] = CreateArbSequence(obj, SequenceName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[ArbName, RepeatCount, PlayControl, MarkerMode, MarkerPoint] = comobj.CreateArbSequence(SequenceName, ['';''], int32([0;0]), ['';''], ['';''], int32([0;0]));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method defines a sequence of waveforms already loaded into waveform memory.</Description>
            </Method>
            <Method>
               <Name>CreateArbSequence</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [ArbName, RepeatCount, PlayControl, MarkerMode, MarkerPoint] = CreateArbSequence(obj, SequenceName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[ArbName, RepeatCount, PlayControl, MarkerMode, MarkerPoint] = comobj.CreateArbSequence(SequenceName, ['';''], int32([0;0]), ['';''], ['';''], int32([0;0]));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method defines a sequence of waveforms already loaded into waveform memory.</Description>
            </Method>
            <Method>
               <Name>GetCatalog</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetCatalog(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetCatalog();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the contents of volatile waveform memory on the specified channel. Both individual arbs and sequences of arbs are returned.</Description>
            </Method>
            <Method>
               <Name>GetCatalog</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetCatalog(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetCatalog();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the contents of volatile waveform memory on the specified channel. Both individual arbs and sequences of arbs are returned.</Description>
            </Method>
            <Method>
               <Name>GetFrequencyMax</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetFrequencyMax(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetFrequencyMax();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Gets the maximum frequency for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>GetFrequencyMin</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetFrequencyMin(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetFrequencyMin();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Gets the minimum frequency for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>GetPeriodMax</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetPeriodMax(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetPeriodMax();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Get the maximum period for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>GetPeriodMin</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetPeriodMin(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetPeriodMin();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Get the minimum period for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>GetPhaseMax</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetPhaseMax(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetPhaseMax();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Get the maximum phase for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>GetPhaseMin</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetPhaseMin(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetPhaseMin();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Get the minimum  phase for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>LoadArbWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Data] = LoadArbWaveform(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[Data] = comobj.LoadArbWaveform(Name, [0;0]);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method downloads floating point values between +1 and -1 into volatile memory.</Description>
            </Method>
            <Method>
               <Name>LoadArbWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Data] = LoadArbWaveform(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
[Data] = comobj.LoadArbWaveform(Name, [0;0]);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method downloads floating point values between +1 and -1 into volatile memory.</Description>
            </Method>
            <Method>
               <Name>LoadArbWaveformBinary</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadArbWaveformBinary(obj, Name, Data)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.LoadArbWaveformBinary(Name, single(Data));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Downloads floating point values into waveform volatile memory as either a list of comma separated values or binary block of data.</Description>
            </Method>
            <Method>
               <Name>LoadArbWaveformDAC</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadArbWaveformDAC(obj, Name, Data)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.LoadArbWaveformDAC(Name, int16(Data));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Downloads integer values representing DAC codes into waveform volatile memory.</Description>
            </Method>
            <Method>
               <Name>LoadArbWaveformDAC</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadArbWaveformDAC(obj, Name, Data)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.LoadArbWaveformDAC(Name, int16(Data));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Downloads integer values representing DAC codes into waveform volatile memory.</Description>
            </Method>
            <Method>
               <Name>LoadDualArbWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadDualArbWaveform(obj, Format, Name, Data)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.LoadDualArbWaveform(Format, Name, single(Data));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Creates a dual arbitrary waveform. It downloads floating point values between +1 and -1 into waveform memory in the specified format.</Description>
            </Method>
            <Method>
               <Name>LoadDualArbWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadDualArbWaveform(obj, Format, Name, Data)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.LoadDualArbWaveform(Format, Name, single(Data));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Creates a dual arbitrary waveform. It downloads floating point values between +1 and -1 into waveform memory in the specified format.</Description>
            </Method>
            <Method>
               <Name>LoadDualArbWaveformDAC</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadDualArbWaveformDAC(obj, Format, Name, Data)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.LoadDualArbWaveformDAC(Format, Name, int16(Data));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Creates a dual arbitrary waveform. It downloads decimal integer values representing DAC codes into waveform memory in the specified format.</Description>
            </Method>
            <Method>
               <Name>LoadDualArbWaveformDAC</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadDualArbWaveformDAC(obj, Format, Name, Data)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.LoadDualArbWaveformDAC(Format, Name, int16(Data));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Creates a dual arbitrary waveform. It downloads decimal integer values representing DAC codes into waveform memory in the specified format.</Description>
            </Method>
            <Method>
               <Name>OpenArbWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function OpenArbWaveform(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.OpenArbWaveform(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads the specified segment(.seg) or sequence(.seq) file on INTERNAL or USB memory into volatile memory for the channel specified.</Description>
            </Method>
            <Method>
               <Name>OpenArbWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function OpenArbWaveform(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.OpenArbWaveform(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads the specified segment(.seg) or sequence(.seq) file on INTERNAL or USB memory into volatile memory for the channel specified.</Description>
            </Method>
            <Method>
               <Name>SelectArbWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SelectArbWaveform(obj, Name)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.SelectArbWaveform(Name);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method selects an Arb or Sequence which has been loaded into the waveform memory.</Description>
            </Method>
            <Method>
               <Name>SelectArbWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SelectArbWaveform(obj, Name)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.SelectArbWaveform(Name);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method selects an Arb or Sequence which has been loaded into the waveform memory.</Description>
            </Method>
            <Method>
               <Name>SetFrequencyMax</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetFrequencyMax(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.SetFrequencyMax();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the maximum frequency for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>SetFrequencyMin</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetFrequencyMin(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.SetFrequencyMin();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the minimum frequency for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>SetPeriodMax</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPeriodMax(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.SetPeriodMax();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the maximum period for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>SetPeriodMin</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPeriodMin(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.SetPeriodMin();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the minimum period for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>SetPhaseMax</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPhaseMax(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.SetPhaseMax();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the maximum phase for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>SetPhaseMin</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPhaseMin(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.SetPhaseMin();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the minimum phase for the arbitrary waveform.</Description>
            </Method>
            <Method>
               <Name>StoreArbWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function StoreArbWaveform(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.StoreArbWaveform(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method stores the specified segment(.seg) or sequence(.seq) data in the channel specified volatile memory on INTERNAL or USB memory.</Description>
            </Method>
            <Method>
               <Name>StoreArbWaveform</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function StoreArbWaveform(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.StoreArbWaveform(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method stores the specified segment(.seg) or sequence(.seq) data in the channel specified volatile memory on INTERNAL or USB memory.</Description>
            </Method>
            <Method>
               <Name>SynchronizeArbs</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeArbs(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeArbs();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Causes two independent arbitrary waveforms to synchronize to first point of each waveform.</Description>
            </Method>
            <Method>
               <Name>SynchronizeArbs</Name>
               <Location>Channel3OutputFunction3ArbitraryWaveform3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeArbs(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.OutputFunction3;
comobj = comobj.ArbitraryWaveform3;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeArbs();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Causes two independent arbitrary waveforms to synchronize to first point of each waveform.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3PhaseLock</Name>
         <Description>IAg3352xPhaseLock interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3PhaseLock1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Phase</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The degrees or radians as the angle units.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The degrees or radians as the angle units.</Description>
            </Property>
            <Property>
               <Name>UnlockErrorEnabled</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.UnlockErrorEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.UnlockErrorEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The function generator state to generate the phase-lock error.</Description>
            </Property>
            <Property>
               <Name>UnlockErrorEnabled</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.UnlockErrorEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.UnlockErrorEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The function generator state to generate the phase-lock error.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Reference</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Reference(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.Reference();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately sets a new zero-phase reference point (for the specified channel) without changing the output of the function generator.</Description>
            </Method>
            <Method>
               <Name>Reference</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Reference(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.Reference();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately sets a new zero-phase reference point (for the specified channel) without changing the output of the function generator.</Description>
            </Method>
            <Method>
               <Name>SynchronizeChannels</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeChannels(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeChannels();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately changes the phase of Channel 2 to match the phase of Channel 1 and sets both channels' zero phase reference points to zero degrees.</Description>
            </Method>
            <Method>
               <Name>SynchronizeChannels</Name>
               <Location>Channel3PhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeChannels(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeChannels();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately changes the phase of Channel 2 to match the phase of Channel 1 and sets both channels' zero phase reference points to zero degrees.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3PhaseLock2</Name>
         <Description>IAg3352xPhaseLock2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3PhaseLock21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Phase</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The degrees or radians as the angle units.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The degrees or radians as the angle units.</Description>
            </Property>
            <Property>
               <Name>UnlockErrorEnabled</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	propertyValue = comobj.UnlockErrorEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	comobj.UnlockErrorEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The function generator state to generate the phase-lock error.</Description>
            </Property>
            <Property>
               <Name>UnlockErrorEnabled</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	propertyValue = comobj.UnlockErrorEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	comobj.UnlockErrorEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The function generator state to generate the phase-lock error.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Reference</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Reference(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock2;
feature('COM_SafeArraySingleDim',1);
comobj.Reference();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately sets a new zero-phase reference point (for the specified channel) without changing the output of the function generator.</Description>
            </Method>
            <Method>
               <Name>Reference</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Reference(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock2;
feature('COM_SafeArraySingleDim',1);
comobj.Reference();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately sets a new zero-phase reference point (for the specified channel) without changing the output of the function generator.</Description>
            </Method>
            <Method>
               <Name>SynchronizeChannels</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeChannels(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock2;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeChannels();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately changes the phase of Channel 2 to match the phase of Channel 1 and sets both channels' zero phase reference points to zero degrees.</Description>
            </Method>
            <Method>
               <Name>SynchronizeChannels</Name>
               <Location>Channel3PhaseLock2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeChannels(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock2;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeChannels();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately changes the phase of Channel 2 to match the phase of Channel 1 and sets both channels' zero phase reference points to zero degrees.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3PhaseLock2ModulationSource</Name>
         <Description>IAg3352xPhaseLock2ModulationSource interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3PhaseLock2ModulationSource1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Phase</Name>
               <Location>Channel3PhaseLock2ModulationSource</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	comobj = comobj.ModulationSource;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock2;
	comobj = comobj.ModulationSource;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets or gets the phase of the internal modulation source. Applies in modulation mode when modulating by the internal source and the shape is Sinusoidal, Square, RAMP, NRAMP, or Triangular.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>GetPhaseMax</Name>
               <Location>Channel3PhaseLock2ModulationSource</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetPhaseMax(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock2;
comobj = comobj.ModulationSource;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetPhaseMax();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Gets the maximum phase of the internal modulation source.  Applies in modulation mode when modulating by the internal source and the shape is Sinusoidal, Square, RAMP, NRAMP, or Triangular.</Description>
            </Method>
            <Method>
               <Name>GetPhaseMin</Name>
               <Location>Channel3PhaseLock2ModulationSource</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetPhaseMin(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock2;
comobj = comobj.ModulationSource;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetPhaseMin();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Gets the minimum phase of the internal modulation source.  Applies in modulation mode when modulating by the internal source and the shape is Sinusoidal, Square, RAMP, NRAMP, or Triangular.</Description>
            </Method>
            <Method>
               <Name>SetPhaseMax</Name>
               <Location>Channel3PhaseLock2ModulationSource</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPhaseMax(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock2;
comobj = comobj.ModulationSource;
feature('COM_SafeArraySingleDim',1);
comobj.SetPhaseMax();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the maximum phase of the internal modulation source.  Applies in modulation mode when modulating by the internal source and the shape is Sinusoidal, Square, RAMP, NRAMP, or Triangular.</Description>
            </Method>
            <Method>
               <Name>SetPhaseMin</Name>
               <Location>Channel3PhaseLock2ModulationSource</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPhaseMin(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock2;
comobj = comobj.ModulationSource;
feature('COM_SafeArraySingleDim',1);
comobj.SetPhaseMin();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the minimum phase of the internal modulation source.  Applies in modulation mode when modulating by the internal source and the shape is Sinusoidal, Square, RAMP, NRAMP, or Triangular.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3PM</Name>
         <Description>IAg3352xPM interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3PM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3PM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3PWM</Name>
         <Description>IAg3352xPWM interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3PWM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycle</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.DeviationDutyCycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycle</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.DeviationDutyCycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMax</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMax</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMin</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMin</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PWM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PWM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) at which the output pulse width 'shifts' through its pulse width deviation for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) at which the output pulse width 'shifts' through its pulse width deviation for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform on the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3PWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3SumModulation</Name>
         <Description>IAg3352xSumModulation interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3SumModulation1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Combine</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Combine;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Combine = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xCombineChannel1" Value="Ag3352xCombineChannel1"/>
                     <Enum Name="Ag3352xCombineChannel2" Value="Ag3352xCombineChannel2"/>
                     <Enum Name="Ag3352xCombineNone" Value="Ag3352xCombineNone"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Combines the output from two channels of a 33522A two-channel function generator into a single channel connector.</Description>
            </Property>
            <Property>
               <Name>Combine</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Combine;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Combine = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xCombineChannel1" Value="Ag3352xCombineChannel1"/>
                     <Enum Name="Ag3352xCombineChannel2" Value="Ag3352xCombineChannel2"/>
                     <Enum Name="Ag3352xCombineNone" Value="Ag3352xCombineNone"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Combines the output from two channels of a 33522A two-channel function generator into a single channel connector.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The SUM modulation state (enabled or disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The SUM modulation state (enabled or disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepth</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalDepth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepth</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalDepth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMax</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMax</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMin</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMin</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) of the summing waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) of the summing waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum frequency in Hertz (Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum frequency in Hertz (Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz(Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz(Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the summing waveform (the waveform added to the primary waveform using the SUM command subsystem) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the summing waveform (the waveform added to the primary waveform using the SUM command subsystem) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the summing signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3SumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the summing signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3Sweep</Name>
         <Description>IAg3352xSweep interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Sweep1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The sweep mode (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The sweep mode (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTime</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.HoldTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTime</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.HoldTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMax</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMax</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMin</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMin</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTime</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.ReturnTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTime</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.ReturnTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMax</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMax</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMin</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMin</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Spacing</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Spacing;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Spacing = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xSweepSpacingLinear" Value="Ag3352xSweepSpacingLinear"/>
                     <Enum Name="Ag3352xSweepSpacingLogarithmic" Value="Ag3352xSweepSpacingLogarithmic"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The linear or logarithmic spacing for the frequency sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Spacing</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Spacing;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Spacing = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xSweepSpacingLinear" Value="Ag3352xSweepSpacingLinear"/>
                     <Enum Name="Ag3352xSweepSpacingLogarithmic" Value="Ag3352xSweepSpacingLogarithmic"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The linear or logarithmic spacing for the frequency sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Time</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Time;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Time = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Time</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Time;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Time = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMax</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMax</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMin</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMin</Name>
               <Location>Channel3Sweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channel3Trigger</Name>
         <Description>IAg3352xTrigger interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Trigger1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Count</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Abort</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel3Trigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3Trigger2</Name>
         <Description>IAg3352xTrigger2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Trigger21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Count</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Timer</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Timer;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Timer = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets the timer used when Source is set to Ag3352xTriggerSourceTimer.</Description>
            </Property>
            <Property>
               <Name>Timer</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.Timer;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	comobj.Timer = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets the timer used when Source is set to Ag3352xTriggerSourceTimer.</Description>
            </Property>
            <Property>
               <Name>TimerMax</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.TimerMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the maximum value (in seconds) the timer can be set to.</Description>
            </Property>
            <Property>
               <Name>TimerMax</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.TimerMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the maximum value (in seconds) the timer can be set to.</Description>
            </Property>
            <Property>
               <Name>TimerMin</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.TimerMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the minimum value (in seconds) the timer can be set to.</Description>
            </Property>
            <Property>
               <Name>TimerMin</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger2;
	propertyValue = comobj.TimerMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the minimum value (in seconds) the timer can be set to.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Abort</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel3Trigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger2;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3Trigger3</Name>
         <Description>IAg3352xTrigger3 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Trigger31" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Count</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Timer</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.Timer;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.Timer = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets the timer used when Source is set to Ag3352xTriggerSourceTimer.</Description>
            </Property>
            <Property>
               <Name>Timer</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.Timer;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.Timer = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets the timer used when Source is set to Ag3352xTriggerSourceTimer.</Description>
            </Property>
            <Property>
               <Name>TimerMax</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.TimerMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the maximum value (in seconds) the timer can be set to.</Description>
            </Property>
            <Property>
               <Name>TimerMax</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.TimerMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the maximum value (in seconds) the timer can be set to.</Description>
            </Property>
            <Property>
               <Name>TimerMin</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.TimerMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the minimum value (in seconds) the timer can be set to.</Description>
            </Property>
            <Property>
               <Name>TimerMin</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.TimerMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only - Returns the minimum value (in seconds) the timer can be set to.</Description>
            </Property>
            <Property>
               <Name>TriggerLevel</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	propertyValue = comobj.TriggerLevel;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj.TriggerLevel = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Sets the output trigger level and/ or the input trigger threshold in volts.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Abort</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>GetTriggerLevelMax</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetTriggerLevelMax(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetTriggerLevelMax();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Get the maximum value for trigger level threshold in volt.</Description>
            </Method>
            <Method>
               <Name>GetTriggerLevelMin</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetTriggerLevelMin(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetTriggerLevelMin();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Get the minimum value for trigger level threshold in volt.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>SetTriggerLevelMax</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetTriggerLevelMax(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
comobj.SetTriggerLevelMax();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the maximum value for Trigger level threshold in volt.</Description>
            </Method>
            <Method>
               <Name>SetTriggerLevelMin</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetTriggerLevelMin(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
comobj.SetTriggerLevelMin();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the minimum value for trigger level threshold in volt.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>Channel3Trigger3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger3;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channel3Trigger3OutputTrigger2</Name>
         <Description>IAg3352xOutputTrigger2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channel3Trigger3OutputTrigger21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Trigger3OutputTrigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj = comobj.OutputTrigger2;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj = comobj.OutputTrigger2;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The 'trigger out' signal Enabled or Disabled.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>Channel3Trigger3OutputTrigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj = comobj.OutputTrigger2;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj = comobj.OutputTrigger2;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The 'trigger out' signal Enabled or Disabled.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel3Trigger3OutputTrigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj = comobj.OutputTrigger2;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj = comobj.OutputTrigger2;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputTriggerSlopePositive" Value="Ag3352xOutputTriggerSlopePositive"/>
                     <Enum Name="Ag3352xOutputTriggerSlopeNegative" Value="Ag3352xOutputTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger out signal slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>Channel3Trigger3OutputTrigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj = comobj.OutputTrigger2;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj = comobj.OutputTrigger2;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputTriggerSlopePositive" Value="Ag3352xOutputTriggerSlopePositive"/>
                     <Enum Name="Ag3352xOutputTriggerSlopeNegative" Value="Ag3352xOutputTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger out signal slope.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>Channel3Trigger3OutputTrigger2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj = comobj.OutputTrigger2;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger3;
	comobj = comobj.OutputTrigger2;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputTriggerSourceCH1" Value="Ag3352xOutputTriggerSourceCH1"/>
                     <Enum Name="Ag3352xOutputTriggerSourceCH2" Value="Ag3352xOutputTriggerSourceCH2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Selects the source channel used by trigger output on a two-channel instrument. The source channel determines what output signal to generate on the trigger out connector.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>ChannelAM</Name>
         <Description>IAg3352xAM interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelAM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Depth</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Depth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Depth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Depth</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Depth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Depth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMax</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMax</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMin</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DepthMin</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.DepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>AM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>AM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of the frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum of the frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of the frequency in Hertz(Hz) of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum of the frequency in Hertz(Hz) of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xAMModeDSSC" Value="Ag3352xAMModeDSSC"/>
                     <Enum Name="Ag3352xAMModeNormal" Value="Ag3352xAMModeNormal"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Amplitude Modulation mode Double Sideband Suppressed Carrier (ON) or AM modulated carrier with sidebands (OFF) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xAMModeDSSC" Value="Ag3352xAMModeDSSC"/>
                     <Enum Name="Ag3352xAMModeNormal" Value="Ag3352xAMModeNormal"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Amplitude Modulation mode Double Sideband Suppressed Carrier (ON) or AM modulated carrier with sidebands (OFF) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelAM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.AM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>ChannelApply</Name>
         <Description>IAg3352xApply interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelApply1" Index="1"/>
         </Mappings>
         <PropertyInfo/>
         <MethodInfo>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>QueryOutputConfiguration</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Function, Frequency, Amplitude, Offset] = QueryOutputConfiguration(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
[Function, Frequency, Amplitude, Offset] = comobj.QueryOutputConfiguration(0, 0, 0, 0);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the function generator's current output configuration.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetArbWaveform</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetArbWaveform(obj, SampleRate, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetArbWaveform(double(SampleRate), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs the arbitrary waveform currently selected. The waveform is output using the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetDC</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetDC(obj, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetDC(double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a dc voltage with the level specified by the offset parameter.  The dc voltage is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetNoise</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNoise(obj, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetNoise(double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs Gaussian noise with the specified amplitude and dc offset. The noise waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPRBS</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPRBS(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPRBS(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs PRBS with the specified amplitude and dc offset.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetPulse</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetPulse(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetPulse(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a pulse wave with the specified frequency, amplitude, and dc offset. The pulse waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetRamp</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetRamp(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetRamp(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a ramp wave with the specified frequency, amplitude, and dc offset. This command overrides the current symmetry setting and automatically selects 100%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSinusoid</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSinusoid(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSinusoid(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a sine wave with the specified frequency, amplitude, and dc offset. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
            <Method>
               <Name>SetSquare</Name>
               <Location>ChannelApply</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetSquare(obj, Frequency, Amplitude, Offset)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Apply;
feature('COM_SafeArraySingleDim',1);
comobj.SetSquare(double(Frequency), double(Amplitude), double(Offset));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method outputs a square wave with the specified frequency, amplitude, and dc offset. This command overrides the current duty cycle setting and automatically selects 50%. The waveform is output as soon as the command is executed.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>ChannelBPSK</Name>
         <Description>IAg3352xBPSK interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelBPSK1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>BPSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>BPSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output phase 'shifts' between the carrier and offset phase for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output phase 'shifts' between the carrier and offset phase for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum BPSK rate in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum Binary Phase Shift Keying phase shift in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The BPSK source for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelBPSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.BPSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The BPSK source for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>ChannelBurst</Name>
         <Description>IAg3352xBurst interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelBurst1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Disables (false) or enables (true) the burst mode.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Disables (false) or enables (true) the burst mode.</Description>
            </Property>
            <Property>
               <Name>GatePolarity</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.GatePolarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.GatePolarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstGatePolarityNormal" Value="Ag3352xBurstGatePolarityNormal"/>
                     <Enum Name="Ag3352xBurstGatePolarityInverted" Value="Ag3352xBurstGatePolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Logic levels on the rear-panel Trig In connector for an externally-gated burst.</Description>
            </Property>
            <Property>
               <Name>GatePolarity</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.GatePolarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.GatePolarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstGatePolarityNormal" Value="Ag3352xBurstGatePolarityNormal"/>
                     <Enum Name="Ag3352xBurstGatePolarityInverted" Value="Ag3352xBurstGatePolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Logic levels on the rear-panel Trig In connector for an externally-gated burst.</Description>
            </Property>
            <Property>
               <Name>InternalPeriod</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriod;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.InternalPeriod = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriod</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriod;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.InternalPeriod = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMax</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMax</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMin</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>InternalPeriodMin</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.InternalPeriodMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum burst period in seconds for internally-triggered bursts.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstModeTriggered" Value="Ag3352xBurstModeTriggered"/>
                     <Enum Name="Ag3352xBurstModeGated" Value="Ag3352xBurstModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst mode triggered or gated.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xBurstModeTriggered" Value="Ag3352xBurstModeTriggered"/>
                     <Enum Name="Ag3352xBurstModeGated" Value="Ag3352xBurstModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The burst mode triggered or gated.</Description>
            </Property>
            <Property>
               <Name>NumberOfCycles</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCycles;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.NumberOfCycles = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCycles</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCycles;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.NumberOfCycles = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMax</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMax</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMin</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>NumberOfCyclesMin</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.NumberOfCyclesMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum number of cycles to be output per burst (triggered burst mode only).</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum starting phase angle in degrees or radians for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Degrees or radians to set the starting phase for the burst.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Burst;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Degrees or radians to set the starting phase for the burst.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>SetNumberOfCyclesInfinity</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNumberOfCyclesInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Burst;
feature('COM_SafeArraySingleDim',1);
comobj.SetNumberOfCyclesInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the number of cycles to be output per burst (triggered burst mode only).</Description>
            </Method>
            <Method>
               <Name>SetNumberOfCyclesInfinity</Name>
               <Location>ChannelBurst</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetNumberOfCyclesInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Burst;
feature('COM_SafeArraySingleDim',1);
comobj.SetNumberOfCyclesInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the number of cycles to be output per burst (triggered burst mode only).</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>ChannelFM</Name>
         <Description>IAg3352xFM interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelFM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Deviation</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum peak frequency deviation in hertz for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelFM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>ChannelFSK</Name>
         <Description>IAg3352xFSK interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelFSK1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>FSK modulation state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum FSK alternate (or hop) frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRate</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.InternalRate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMax</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalRateMin</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.InternalRateMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum rate in Hertz(Hz) at which the output frequency 'shifts' between the carrier and hop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK source.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelFSK</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.FSK;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The FSK source.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>ChannelMarker</Name>
         <Description>IAg3352xMarker interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelMarker1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Cycle</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Cycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Cycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Cycle</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Cycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Cycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMax</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMax</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMin</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>CycleMin</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.CycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker cycle for burst mode operation on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker frequency in Hertz(Hz) for a sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Point</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Point;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Point = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Point</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.Point;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	comobj.Point = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMax</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMax</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMin</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
            <Property>
               <Name>PointMin</Name>
               <Location>ChannelMarker</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Marker;
	propertyValue = comobj.PointMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum marker position to the specified sample number within the active arbitrary waveform segment on the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>ChannelOutput</Name>
         <Description>IAg3352xOutput interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelOutput1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The front-panel output connector mode (Enabled or Disabled)  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Frequency</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Frequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Frequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMax</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMin</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum instrument's output frequency in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>FrequencyMode</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.FrequencyMode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.FrequencyMode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFrequencyModeCW" Value="Ag3352xOutputFrequencyModeCW"/>
                     <Enum Name="Ag3352xOutputFrequencyModeFixed" Value="Ag3352xOutputFrequencyModeFixed"/>
                     <Enum Name="Ag3352xOutputFrequencyModeSweep" Value="Ag3352xOutputFrequencyModeSweep"/>
                     <Enum Name="Ag3352xOutputFrequencyModeList" Value="Ag3352xOutputFrequencyModeList"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The type of frequency coupling between channels in a frequency coupled state.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Load</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Load;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Load = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The desired output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMax</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>LoadMin</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.LoadMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum output termination in ohms.</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Mode</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Mode;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Mode = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputModeNormal" Value="Ag3352xOutputModeNormal"/>
                     <Enum Name="Ag3352xOutputModeGated" Value="Ag3352xOutputModeGated"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current state of the output mode (Gated or Normal).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
            <Property>
               <Name>Polarity</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	propertyValue = comobj.Polarity;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Output;
	comobj.Polarity = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputPolarityNormal" Value="Ag3352xOutputPolarityNormal"/>
                     <Enum Name="Ag3352xOutputPolarityInverted" Value="Ag3352xOutputPolarityInverted"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The current polarity settings (Normal or Inverted).</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
            <Method>
               <Name>SetLoadInfinity</Name>
               <Location>ChannelOutput</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetLoadInfinity(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Output;
feature('COM_SafeArraySingleDim',1);
comobj.SetLoadInfinity();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method sets the output termination to infinity.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>ChannelOutputFunction</Name>
         <Description>IAg3352xOutputFunction interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelOutputFunction1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Function</Name>
               <Location>ChannelOutputFunction</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Function</Name>
               <Location>ChannelOutputFunction</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	propertyValue = comobj.Function;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.OutputFunction;
	comobj.Function = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xOutputFunctionSinusoid" Value="Ag3352xOutputFunctionSinusoid"/>
                     <Enum Name="Ag3352xOutputFunctionSquare" Value="Ag3352xOutputFunctionSquare"/>
                     <Enum Name="Ag3352xOutputFunctionRamp" Value="Ag3352xOutputFunctionRamp"/>
                     <Enum Name="Ag3352xOutputFunctionPulse" Value="Ag3352xOutputFunctionPulse"/>
                     <Enum Name="Ag3352xOutputFunctionPRBS" Value="Ag3352xOutputFunctionPRBS"/>
                     <Enum Name="Ag3352xOutputFunctionNoise" Value="Ag3352xOutputFunctionNoise"/>
                     <Enum Name="Ag3352xOutputFunctionDC" Value="Ag3352xOutputFunctionDC"/>
                     <Enum Name="Ag3352xOutputFunctionArbitrary" Value="Ag3352xOutputFunctionArbitrary"/>
                     <Enum Name="Ag3352xOutputFunctionTriangle" Value="Ag3352xOutputFunctionTriangle"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The instrument's output function for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>ChannelPhaseLock</Name>
         <Description>IAg3352xPhaseLock interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelPhaseLock1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Phase</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>Phase</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.Phase;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.Phase = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMax</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseMin</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase offset angle in degrees or radians for the output waveform for the named source channel.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The degrees or radians as the angle units.</Description>
            </Property>
            <Property>
               <Name>PhaseUnits</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.PhaseUnits;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.PhaseUnits = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xPhaseUnitDegree" Value="Ag3352xPhaseUnitDegree"/>
                     <Enum Name="Ag3352xPhaseUnitRadian" Value="Ag3352xPhaseUnitRadian"/>
                     <Enum Name="Ag3352xPhaseUnitSecond" Value="Ag3352xPhaseUnitSecond"/>
                     <Enum Name="Ag3352xPhaseUnitDefault" Value="Ag3352xPhaseUnitDefault"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The degrees or radians as the angle units.</Description>
            </Property>
            <Property>
               <Name>UnlockErrorEnabled</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.UnlockErrorEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.UnlockErrorEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The function generator state to generate the phase-lock error.</Description>
            </Property>
            <Property>
               <Name>UnlockErrorEnabled</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	propertyValue = comobj.UnlockErrorEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PhaseLock;
	comobj.UnlockErrorEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The function generator state to generate the phase-lock error.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Reference</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Reference(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.Reference();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately sets a new zero-phase reference point (for the specified channel) without changing the output of the function generator.</Description>
            </Method>
            <Method>
               <Name>Reference</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Reference(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.Reference();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately sets a new zero-phase reference point (for the specified channel) without changing the output of the function generator.</Description>
            </Method>
            <Method>
               <Name>SynchronizeChannels</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeChannels(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeChannels();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately changes the phase of Channel 2 to match the phase of Channel 1 and sets both channels' zero phase reference points to zero degrees.</Description>
            </Method>
            <Method>
               <Name>SynchronizeChannels</Name>
               <Location>ChannelPhaseLock</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SynchronizeChannels(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.PhaseLock;
feature('COM_SafeArraySingleDim',1);
comobj.SynchronizeChannels();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method immediately changes the phase of Channel 2 to match the phase of Channel 1 and sets both channels' zero phase reference points to zero degrees.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>ChannelPM</Name>
         <Description>IAg3352xPM interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelPM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Deviation</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum phase deviation in degrees for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency of the modulating waveform in Hertz(Hz) for the specified channel</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency of the modulating waveform in Hertz(Hz) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelPM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>ChannelPWM</Name>
         <Description>IAg3352xPWM interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelPWM1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Deviation</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Deviation</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Deviation;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Deviation = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycle</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.DeviationDutyCycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycle</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycle;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.DeviationDutyCycle = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMax</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMax</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMin</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationDutyCycleMin</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationDutyCycleMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum duty cycle deviation in percent (percent of period) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMax</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>DeviationMin</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.DeviationMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum pulse width deviation in seconds for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PWM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The PWM state (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) at which the output pulse width 'shifts' through its pulse width deviation for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) at which the output pulse width 'shifts' through its pulse width deviation for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The maximum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz (Hz) of the modulating waveform.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform on the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the modulating waveform on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelPWM</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.PWM;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the modulating signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>Channels</Name>
         <Description>IAg3352xChannels collection interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channels1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Count</Name>
               <Location>Channels</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The number of channels.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Item</Name>
               <Location>Channels</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Item(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Item(Name, varargin{:});
end
[Val] = comobj.Item(Name);
</MCode>
               </Code>
               <Description>An interface reference pointer to the IAg3352xChannel interface which is selected by the channel name.</Description>
            </Method>
            <Method>
               <Name>Name</Name>
               <Location>Channels</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Name(obj, Index, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Name(int32(Index), varargin{:});
end
[Val] = comobj.Name(int32(Index));
</MCode>
               </Code>
               <Description>The channel name for a given index.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channels2</Name>
         <Description>IAg3352xChannels2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channels21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Count</Name>
               <Location>Channels2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The number of channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channels2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels2;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The number of channels.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Item</Name>
               <Location>Channels2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Item(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Item(Name, varargin{:});
end
[Val] = comobj.Item(Name);
</MCode>
               </Code>
               <Description>An interface reference pointer to the IAg3352xChannel interface which is selected by the channel name.</Description>
            </Method>
            <Method>
               <Name>Item</Name>
               <Location>Channels2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Item(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Item(Name, varargin{:});
end
[Val] = comobj.Item(Name);
</MCode>
               </Code>
               <Description>An interface reference pointer to the IAg3352xChannel interface which is selected by the channel name.</Description>
            </Method>
            <Method>
               <Name>Item2</Name>
               <Location>Channels2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Item2(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Item2(Name, varargin{:});
end
[Val] = comobj.Item2(Name);
</MCode>
               </Code>
               <Description>An interface reference pointer to the IAg3352xChannel interface which is selected by the channel name.</Description>
            </Method>
            <Method>
               <Name>Name</Name>
               <Location>Channels2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Name(obj, Index, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Name(int32(Index), varargin{:});
end
[Val] = comobj.Name(int32(Index));
</MCode>
               </Code>
               <Description>The channel name for a given index.</Description>
            </Method>
            <Method>
               <Name>Name</Name>
               <Location>Channels2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Name(obj, Index, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels2;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Name(int32(Index), varargin{:});
end
[Val] = comobj.Name(int32(Index));
</MCode>
               </Code>
               <Description>The channel name for a given index.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Channels3</Name>
         <Description>IAg3352xChannels3 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Channels31" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Count</Name>
               <Location>Channels3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The number of channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>Channels3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels3;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The number of channels.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Item</Name>
               <Location>Channels3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Item(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Item(Name, varargin{:});
end
[Val] = comobj.Item(Name);
</MCode>
               </Code>
               <Description>An interface reference pointer to the IAg3352xChannel interface which is selected by the channel name.</Description>
            </Method>
            <Method>
               <Name>Item</Name>
               <Location>Channels3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Item(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Item(Name, varargin{:});
end
[Val] = comobj.Item(Name);
</MCode>
               </Code>
               <Description>An interface reference pointer to the IAg3352xChannel interface which is selected by the channel name.</Description>
            </Method>
            <Method>
               <Name>Item2</Name>
               <Location>Channels3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Item2(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Item2(Name, varargin{:});
end
[Val] = comobj.Item2(Name);
</MCode>
               </Code>
               <Description>An interface reference pointer to the IAg3352xChannel interface which is selected by the channel name.</Description>
            </Method>
            <Method>
               <Name>Item2</Name>
               <Location>Channels3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Item2(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Item2(Name, varargin{:});
end
[Val] = comobj.Item2(Name);
</MCode>
               </Code>
               <Description>An interface reference pointer to the IAg3352xChannel interface which is selected by the channel name.</Description>
            </Method>
            <Method>
               <Name>Item3</Name>
               <Location>Channels3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Item3(obj, Name, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Item3(Name, varargin{:});
end
[Val] = comobj.Item3(Name);
</MCode>
               </Code>
               <Description>An interface reference pointer to the IAg3352xChannel interface which is selected by the channel name.</Description>
            </Method>
            <Method>
               <Name>Name</Name>
               <Location>Channels3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Name(obj, Index, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Name(int32(Index), varargin{:});
end
[Val] = comobj.Name(int32(Index));
</MCode>
               </Code>
               <Description>The channel name for a given index.</Description>
            </Method>
            <Method>
               <Name>Name</Name>
               <Location>Channels3</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Name(obj, Index, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels3;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Name(int32(Index), varargin{:});
end
[Val] = comobj.Name(int32(Index));
</MCode>
               </Code>
               <Description>The channel name for a given index.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>ChannelSumModulation</Name>
         <Description>IAg3352xSumModulation interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelSumModulation1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Combine</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Combine;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Combine = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xCombineChannel1" Value="Ag3352xCombineChannel1"/>
                     <Enum Name="Ag3352xCombineChannel2" Value="Ag3352xCombineChannel2"/>
                     <Enum Name="Ag3352xCombineNone" Value="Ag3352xCombineNone"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Combines the output from two channels of a 33522A two-channel function generator into a single channel connector.</Description>
            </Property>
            <Property>
               <Name>Combine</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Combine;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Combine = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xCombineChannel1" Value="Ag3352xCombineChannel1"/>
                     <Enum Name="Ag3352xCombineChannel2" Value="Ag3352xCombineChannel2"/>
                     <Enum Name="Ag3352xCombineNone" Value="Ag3352xCombineNone"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Combines the output from two channels of a 33522A two-channel function generator into a single channel connector.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The SUM modulation state (enabled or disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The SUM modulation state (enabled or disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepth</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalDepth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepth</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepth;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalDepth = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMax</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMax</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMin</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalDepthMin</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalDepthMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum internal modulation depth (or percent modulation) in percent for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) of the summing waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequency</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequency;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFrequency = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The frequency in Hertz (Hz) of the summing waveform for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum frequency in Hertz (Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMax</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum frequency in Hertz (Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz(Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFrequencyMin</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFrequencyMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The minimum frequency in Hertz(Hz) of the summing waveform  for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the summing waveform (the waveform added to the primary waveform using the SUM command subsystem) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InternalFunction</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.InternalFunction;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.InternalFunction = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationInternalFunctionSinusoid" Value="Ag3352xModulationInternalFunctionSinusoid"/>
                     <Enum Name="Ag3352xModulationInternalFunctionSquare" Value="Ag3352xModulationInternalFunctionSquare"/>
                     <Enum Name="Ag3352xModulationInternalFunctionRamp" Value="Ag3352xModulationInternalFunctionRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNegativeRamp" Value="Ag3352xModulationInternalFunctionNegativeRamp"/>
                     <Enum Name="Ag3352xModulationInternalFunctionTriangle" Value="Ag3352xModulationInternalFunctionTriangle"/>
                     <Enum Name="Ag3352xModulationInternalFunctionNoise" Value="Ag3352xModulationInternalFunctionNoise"/>
                     <Enum Name="Ag3352xModulationInternalFunctionPRBS" Value="Ag3352xModulationInternalFunctionPRBS"/>
                     <Enum Name="Ag3352xModulationInternalFunctionArbitrary" Value="Ag3352xModulationInternalFunctionArbitrary"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The shape of the summing waveform (the waveform added to the primary waveform using the SUM command subsystem) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the summing signal for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelSumModulation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.SumModulation;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xModulationSourceInternal" Value="Ag3352xModulationSourceInternal"/>
                     <Enum Name="Ag3352xModulationSourceExternal" Value="Ag3352xModulationSourceExternal"/>
                     <Enum Name="Ag3352xModulationSourceChannel1" Value="Ag3352xModulationSourceChannel1"/>
                     <Enum Name="Ag3352xModulationSourceChannel2" Value="Ag3352xModulationSourceChannel2"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The source of the summing signal for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>ChannelSweep</Name>
         <Description>IAg3352xSweep interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelSweep1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The sweep mode (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Enabled</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The sweep mode (Enabled or Disabled) for the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTime</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.HoldTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTime</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.HoldTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMax</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMax</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMin</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>HoldTimeMin</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.HoldTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will hold (pause) at the stop frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTime</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.ReturnTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTime</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTime;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.ReturnTime = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMax</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMax</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMin</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>ReturnTimeMin</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.ReturnTimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds the sweep will take to return from the stop frequency to the start frequency on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Spacing</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Spacing;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Spacing = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xSweepSpacingLinear" Value="Ag3352xSweepSpacingLinear"/>
                     <Enum Name="Ag3352xSweepSpacingLogarithmic" Value="Ag3352xSweepSpacingLogarithmic"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The linear or logarithmic spacing for the frequency sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Spacing</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Spacing;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Spacing = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xSweepSpacingLinear" Value="Ag3352xSweepSpacingLinear"/>
                     <Enum Name="Ag3352xSweepSpacingLogarithmic" Value="Ag3352xSweepSpacingLogarithmic"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The linear or logarithmic spacing for the frequency sweep on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Time</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Time;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Time = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Time</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.Time;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	comobj.Time = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMax</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMax</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMax;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The maximum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMin</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
            <Property>
               <Name>TimeMin</Name>
               <Location>ChannelSweep</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Sweep;
	propertyValue = comobj.TimeMin;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only -.  The minimum number of seconds required to sweep from the start frequency to the stop frequency for the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>ChannelTrigger</Name>
         <Description>IAg3352xTrigger interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="ChannelTrigger1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Count</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Count</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Count;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Count = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger count, which is used by both channels.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>Delay</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Delay;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Delay = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger delay for the specified channel. Trigger delay is the time between assertion of a trigger and the time the trigger occurs.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>InitiateContinuousEnabled</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.InitiateContinuousEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.InitiateContinuousEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Brings the trigger system out of the 'idle' state and prepares for a trigger event for the specified channel.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Slope</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Slope;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Slope = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSlopePositive" Value="Ag3352xTriggerSlopePositive"/>
                     <Enum Name="Ag3352xTriggerSlopeNegative" Value="Ag3352xTriggerSlopeNegative"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger slope.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
            <Property>
               <Name>Source</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	propertyValue = comobj.Source;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Channels;
	name = comobj.Name(obj.HwIndex);
	comobj = comobj.Item(name);
	comobj = comobj.Trigger;
	comobj.Source = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xTriggerSourceImmediate" Value="Ag3352xTriggerSourceImmediate"/>
                     <Enum Name="Ag3352xTriggerSourceExternal" Value="Ag3352xTriggerSourceExternal"/>
                     <Enum Name="Ag3352xTriggerSourceTimer" Value="Ag3352xTriggerSourceTimer"/>
                     <Enum Name="Ag3352xTriggerSourceBus" Value="Ag3352xTriggerSourceBus"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The trigger source for the triggered burst or frequency sweep modes on the specified channel.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Abort</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Abort</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Abort(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Abort();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method halts a burst, even with ncycles = infinite and causes the trigger subsystem to return to the IDLE state.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>Initiate</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Initiate(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Initiate();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Changes the state of the triggering system from the 'idle' state to the 'wait-for-trigger' state for the number of triggers specified for the specified channel.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>SoftwareTrigger</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SoftwareTrigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.SoftwareTrigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Trigger a sweep or burst from the remote interface only if the bus (software) trigger source is currently selected.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
            <Method>
               <Name>Trigger</Name>
               <Location>ChannelTrigger</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Trigger(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Channels;
name = comobj.Name(obj.HwIndex);
comobj = comobj.Item(name);
comobj = comobj.Trigger;
feature('COM_SafeArraySingleDim',1);
comobj.Trigger();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method issues an immediate trigger (to initiate a sweep or trigger a burst) for the specified channel. Note: MATLAB wrapper method name is TriggerImmediate.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Display</Name>
         <Description>IAg3352xDisplay interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Display1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Enabled</Name>
               <Location>Display</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Display;
	propertyValue = comobj.Enabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Display;
	comobj.Enabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Front Panel Display Mode OFF or ON.</Description>
            </Property>
            <Property>
               <Name>Text</Name>
               <Location>Display</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Display;
	propertyValue = comobj.Text;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Display;
	comobj.Text = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Function generator's front-panel display message.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>TextClear</Name>
               <Location>Display</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function TextClear(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Display;
feature('COM_SafeArraySingleDim',1);
comobj.TextClear();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Clear the text message currently shown on the function generator's front-panel display.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>DisplayHCopy</Name>
         <Description>IAg3352xHCopy interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="DisplayHCopy1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>DataFormat</Name>
               <Location>DisplayHCopy</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Display;
	comobj = comobj.HCopy;
	propertyValue = comobj.DataFormat;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Display;
	comobj = comobj.HCopy;
	comobj.DataFormat = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="Ag3352xHCopyDataFormatPNG" Value="Ag3352xHCopyDataFormatPNG"/>
                     <Enum Name="Ag3352xHCopyDataFormatBMP" Value="Ag3352xHCopyDataFormatBMP"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The image format for display images (screen dumps) to be returned by the GetScreenDump() method.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>GetScreenDump</Name>
               <Location>DisplayHCopy</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetScreenDump(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Display;
comobj = comobj.HCopy;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetScreenDump();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method captures and returns the front-panel display image ('screen dump').</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>DriverOperation</Name>
         <Description>IVI Driver operation interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="DriverOperation1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Cache</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	propertyValue = comobj.Cache;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	comobj.Cache = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>If True, the driver caches instrument settings to avoid unnecessary I/O to the instrument.  The actual settings that are cached are driver-specific.</Description>
            </Property>
            <Property>
               <Name>DriverSetup</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	propertyValue = comobj.DriverSetup;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The driver setup string.  It is either specified in the Configuration Store or passed in the OptionString parameter of the Initialize function.  Driver setup is empty if the driver is not initialized.</Description>
            </Property>
            <Property>
               <Name>InterchangeCheck</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	propertyValue = comobj.InterchangeCheck;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	comobj.InterchangeCheck = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>If True, the driver maintains a record of interchangeability warnings.  If the driver does not support interchangeability checking, attempts to set InterchangeCheck to True return an error.</Description>
            </Property>
            <Property>
               <Name>IoResourceDescriptor</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	propertyValue = comobj.IoResourceDescriptor;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The resource descriptor specifies the connection to a physical device.  It is either specified in the Configuration Store or passed in the ResourceName parameter of the Initialize function.  It is empty if the driver is not initialized.</Description>
            </Property>
            <Property>
               <Name>LogicalName</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	propertyValue = comobj.LogicalName;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Logical Name identifies a driver session in the Configuration Store.  If Logical Name is not empty, the driver was initialized from information in the driver session.  If it is empty, the driver was initialized without using the Configuration Store.</Description>
            </Property>
            <Property>
               <Name>QueryInstrumentStatus</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	propertyValue = comobj.QueryInstrumentStatus;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	comobj.QueryInstrumentStatus = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>If True, the driver queries the instrument status at the end of each method or property that performs I/O to the instrument.  If an error is reported, use ErrorQuery to retrieve error messages one at a time from the instrument.</Description>
            </Property>
            <Property>
               <Name>RangeCheck</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	propertyValue = comobj.RangeCheck;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	comobj.RangeCheck = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>If True, the driver validates property and parameter values to avoid invalid commands to the instrument.  The extent of the validation is driver-specific.</Description>
            </Property>
            <Property>
               <Name>RecordCoercions</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	propertyValue = comobj.RecordCoercions;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	comobj.RecordCoercions = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>If True, the driver keeps a list of the value coercions it makes for ViInt32 and ViReal64 attributes.  If the driver does not support coercion recording, attempts to set RecordCoercions to True will return an error.</Description>
            </Property>
            <Property>
               <Name>Simulate</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	propertyValue = comobj.Simulate;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.DriverOperation;
	comobj.Simulate = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>If True, the driver does not perform I/O to the instrument, and returns simulated values for output parameters.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>ClearInterchangeWarnings</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function ClearInterchangeWarnings(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.DriverOperation;
feature('COM_SafeArraySingleDim',1);
comobj.ClearInterchangeWarnings();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Clears the list of interchangeability warnings that the IVI specific driver maintains.</Description>
            </Method>
            <Method>
               <Name>GetNextCoercionRecord</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [CoercionRecord] = GetNextCoercionRecord(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.DriverOperation;
feature('COM_SafeArraySingleDim',1);
[CoercionRecord] = comobj.GetNextCoercionRecord();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Returns the oldest record from the coercion record list.  Records are only added to the list if RecordCoercions is True.</Description>
            </Method>
            <Method>
               <Name>GetNextInterchangeWarning</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [InterchangeWarning] = GetNextInterchangeWarning(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.DriverOperation;
feature('COM_SafeArraySingleDim',1);
[InterchangeWarning] = comobj.GetNextInterchangeWarning();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Returns the oldest warning from the interchange warning list.  Records are only added to the list if InterchangeCheck is True.</Description>
            </Method>
            <Method>
               <Name>InvalidateAllAttributes</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function InvalidateAllAttributes(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.DriverOperation;
feature('COM_SafeArraySingleDim',1);
comobj.InvalidateAllAttributes();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Invalidates all of the driver's cached values.</Description>
            </Method>
            <Method>
               <Name>ResetInterchangeCheck</Name>
               <Location>DriverOperation</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function ResetInterchangeCheck(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.DriverOperation;
feature('COM_SafeArraySingleDim',1);
comobj.ResetInterchangeCheck();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Resets the interchangeability checking algorithms of the driver so that methods and properties that executed prior to calling this function have no affect on whether future calls to the driver generate interchangeability warnings.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Identity</Name>
         <Description>IVI Driver driver identity interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Identity1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Description</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.Description;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>A brief description of the implementing component.  Description is limted to 256 bytes.</Description>
            </Property>
            <Property>
               <Name>Description</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.Description;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>A brief description of the implementing component.  Description is limted to 256 bytes.</Description>
            </Property>
            <Property>
               <Name>GroupCapabilities</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.GroupCapabilities;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>A comma-separated list of the class capability groups implemented by the driver.  Capability group names are documented in the IVI class specifications.  If the driver is not class compliant, the driver returns an empty string.</Description>
            </Property>
            <Property>
               <Name>Identifier</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.Identifier;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The case-sensitive unique identifier of the implementing IVI-COM instrument driver.</Description>
            </Property>
            <Property>
               <Name>InstrumentFirmwareRevision</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.InstrumentFirmwareRevision;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The firmware revision reported by the physical instrument.  If Simulation is enabled or the instrument is not capable of reporting the firmware revision, a string is returned that explains the condition.</Description>
            </Property>
            <Property>
               <Name>InstrumentManufacturer</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.InstrumentManufacturer;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The name of the manufacturer reported by the physical instrument.  If Simulation is enabled or the instrument is not capable of reporting the name of the manufacturer, a string is returned that explains the condition. Manufacturer is limited to 256 bytes</Description>
            </Property>
            <Property>
               <Name>InstrumentModel</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.InstrumentModel;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The model number or name reported by the physical instrument.  If Simulation is enabled or the instrument is not capable of reporting the model number or name, a string is returned that explains the condition.  Model is limited to 256 bytes</Description>
            </Property>
            <Property>
               <Name>Revision</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.Revision;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The revision of the implementing component.  Refer to IVI-3.2, Section 3.1.2.2, for a description of revision syntax and semantics.  Revision is limited to 256 bytes.</Description>
            </Property>
            <Property>
               <Name>Revision</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.Revision;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The revision of the implementing component.  Refer to IVI-3.2, Section 3.1.2.2, for a description of revision syntax and semantics.  Revision is limited to 256 bytes.</Description>
            </Property>
            <Property>
               <Name>SpecificationMajorVersion</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.SpecificationMajorVersion;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>For IVI class-compliant drivers, the major version number of the instrument class specification.  If the driver is not class compliant, the driver returns zero.</Description>
            </Property>
            <Property>
               <Name>SpecificationMinorVersion</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.SpecificationMinorVersion;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>For IVI class-compliant drivers, the minor version number of the instrument class specification.  If the driver is not class compliant, the driver returns zero.</Description>
            </Property>
            <Property>
               <Name>SupportedInstrumentModels</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.SupportedInstrumentModels;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>A comma-separated list of instrument models that the IVI specific driver can control.</Description>
            </Property>
            <Property>
               <Name>Vendor</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.Vendor;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The name of the vendor that supplies the implementing component.  Vendor is limited to 256 bytes.</Description>
            </Property>
            <Property>
               <Name>Vendor</Name>
               <Location>Identity</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Identity;
	propertyValue = comobj.Vendor;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>The name of the vendor that supplies the implementing component.  Vendor is limited to 256 bytes.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo/>
      </Group>
      <Group>
         <Name>InstrumentStatus</Name>
         <Description>IAg3352xStatus interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="InstrumentStatus1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>SerialPoll</Name>
               <Location>InstrumentStatus</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Status;
	propertyValue = comobj.SerialPoll;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Serial poll the instrument status byte.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Clear</Name>
               <Location>InstrumentStatus</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Clear(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Status;
feature('COM_SafeArraySingleDim',1);
comobj.Clear();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Clears all event registers and error queue. The enable registers are unaffected.</Description>
            </Method>
            <Method>
               <Name>ConfigureServiceRequest</Name>
               <Location>InstrumentStatus</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function ConfigureServiceRequest(obj, Reason)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Status;
feature('COM_SafeArraySingleDim',1);
comobj.ConfigureServiceRequest(Reason);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Clears all the enable registers. It then sets the appropriate transition filters and enable registers so when the specified event(s) occurs the instrument requests service. All other events are disabled from generating a service request.</Description>
            </Method>
            <Method>
               <Name>Preset</Name>
               <Location>InstrumentStatus</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Preset(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Status;
feature('COM_SafeArraySingleDim',1);
comobj.Preset();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Sets the SCPI defined enable registers and transition filters. It performs the actions specified by SCPI for the :STATus:PREset command, see SCPI Vol. 2: Command Reference, section 20.7.</Description>
            </Method>
            <Method>
               <Name>Register</Name>
               <Location>InstrumentStatus</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Register(obj, Register, SubRegister, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Status;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Register(Register, SubRegister, varargin{:});
end
[Val] = comobj.Register(Register, SubRegister);
</MCode>
               </Code>
               <Description>Instrument status registers.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Memory</Name>
         <Description>IAg3352xMemory interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Memory1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>CurrentDirectory</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Memory;
	propertyValue = comobj.CurrentDirectory;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Memory;
	comobj.CurrentDirectory = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Specifies the current directory. This folder must exist and is used when folder or file names do not include a drive and folder name.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>CopyFiles</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function CopyFiles(obj, SourceFile, DestinationFile)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.CopyFiles(SourceFile, DestinationFile);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method copies SourceFile to DestinationFile on the mass memory file system.</Description>
            </Method>
            <Method>
               <Name>CopySeqFiles</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function CopySeqFiles(obj, Source, Destination)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.CopySeqFiles(Source, Destination);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method copies sequence files and the corresponding segment files from source to destination.  The file names must include any file extension.</Description>
            </Method>
            <Method>
               <Name>DownloadFile</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function DownloadFile(obj, Source, Destination)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.DownloadFile(Source, Destination);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Downloads data from a file on the host computer (Source) to a local file in the instrument (Destination).</Description>
            </Method>
            <Method>
               <Name>GetCatalog</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [MemoryUsed, MemoryFree, FileList] = GetCatalog(obj, FolderName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
[MemoryUsed, MemoryFree, FileList] = comobj.GetCatalog(FolderName, 0, 0, ['';'']);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns a list of all files that are in the specified folder on the front-panel USB storage device.</Description>
            </Method>
            <Method>
               <Name>GetCatalogDataFiles</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [MemoryUsed, MemoryFree, FileList] = GetCatalogDataFiles(obj, FolderName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
[MemoryUsed, MemoryFree, FileList] = comobj.GetCatalogDataFiles(FolderName, 0, 0, ['';'']);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns a list of all the arb sequence (.seq) files and folders as well as arb segment (.arb/.barb) files in the specified folder.</Description>
            </Method>
            <Method>
               <Name>GetCatalogStateFiles</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [MemoryUsed, MemoryFree, FileList] = GetCatalogStateFiles(obj, FolderName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
[MemoryUsed, MemoryFree, FileList] = comobj.GetCatalogStateFiles(FolderName, 0, 0, ['';'']);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the catalog of only the state (.sta) files in the selected folder.</Description>
            </Method>
            <Method>
               <Name>Load</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Load(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.Load(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads a complete instrument setup from the named file on the mass storage media.</Description>
            </Method>
            <Method>
               <Name>LoadList</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadList(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.LoadList(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads the frequency list from a file named &lt;filename&gt; on the Mass Memory device.&lt;/filename&gt;</Description>
            </Method>
            <Method>
               <Name>LoadState</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadState(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.LoadState(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads a standard instrument setup from the named file on the mass storage media to the named store/recall state.</Description>
            </Method>
            <Method>
               <Name>MakeDirectory</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function MakeDirectory(obj, DirectoryName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.MakeDirectory(DirectoryName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method creates a new directory (folder) on the mass storage media.</Description>
            </Method>
            <Method>
               <Name>MoveFiles</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function MoveFiles(obj, SourceFile, DestinationFile)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.MoveFiles(SourceFile, DestinationFile);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method moves and/or renames Source file to destination file. The file names must include the file extension.</Description>
            </Method>
            <Method>
               <Name>RemoveFile</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function RemoveFile(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.RemoveFile(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method removes a file from the specified mass storage device. The file name must include any file extension.</Description>
            </Method>
            <Method>
               <Name>RemoveFolder</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function RemoveFolder(obj, FolderName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.RemoveFolder(FolderName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method removes the specified folder on the mass storage medium.</Description>
            </Method>
            <Method>
               <Name>Store</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Store(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.Store(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method stores a complete instrument setup file to a named file on the mass storage media.</Description>
            </Method>
            <Method>
               <Name>StoreList</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function StoreList(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.StoreList(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method saved the active frequency list to a file named &lt;filename&gt; on the Mass Memory device.&lt;/filename&gt;</Description>
            </Method>
            <Method>
               <Name>StoreState</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function StoreState(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.StoreState(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method stores the current instrument state to a state file.  The file name optionally includes the folder name and the .sta file extension.</Description>
            </Method>
            <Method>
               <Name>UploadFile</Name>
               <Location>Memory</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function UploadFile(obj, Source, Destination)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory;
feature('COM_SafeArraySingleDim',1);
comobj.UploadFile(Source, Destination);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method uploads the contents of a file from the instrument to a file on the host computer and returns the file content as an IEEE 488.2 definite-length block.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Memory2</Name>
         <Description>IAg3352xMemory2 interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Memory21" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>CurrentDirectory</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Memory2;
	propertyValue = comobj.CurrentDirectory;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Memory2;
	comobj.CurrentDirectory = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Specifies the current directory. This folder must exist and is used when folder or file names do not include a drive and folder name.</Description>
            </Property>
            <Property>
               <Name>CurrentDirectory</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Memory2;
	propertyValue = comobj.CurrentDirectory;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.Memory2;
	comobj.CurrentDirectory = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Specifies the current directory. This folder must exist and is used when folder or file names do not include a drive and folder name.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>CopyFiles</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function CopyFiles(obj, SourceFile, DestinationFile)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.CopyFiles(SourceFile, DestinationFile);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method copies SourceFile to DestinationFile on the mass memory file system.</Description>
            </Method>
            <Method>
               <Name>CopyFiles</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function CopyFiles(obj, SourceFile, DestinationFile)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.CopyFiles(SourceFile, DestinationFile);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method copies SourceFile to DestinationFile on the mass memory file system.</Description>
            </Method>
            <Method>
               <Name>CopySeqFiles</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function CopySeqFiles(obj, Source, Destination)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.CopySeqFiles(Source, Destination);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method copies sequence files and the corresponding segment files from source to destination.  The file names must include any file extension.</Description>
            </Method>
            <Method>
               <Name>CopySeqFiles</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function CopySeqFiles(obj, Source, Destination)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.CopySeqFiles(Source, Destination);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method copies sequence files and the corresponding segment files from source to destination.  The file names must include any file extension.</Description>
            </Method>
            <Method>
               <Name>DownloadFile</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function DownloadFile(obj, Source, Destination)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.DownloadFile(Source, Destination);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Downloads data from a file on the host computer (Source) to a local file in the instrument (Destination).</Description>
            </Method>
            <Method>
               <Name>DownloadFile</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function DownloadFile(obj, Source, Destination)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.DownloadFile(Source, Destination);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Downloads data from a file on the host computer (Source) to a local file in the instrument (Destination).</Description>
            </Method>
            <Method>
               <Name>GetCatalog</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [MemoryUsed, MemoryFree, FileList] = GetCatalog(obj, FolderName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
[MemoryUsed, MemoryFree, FileList] = comobj.GetCatalog(FolderName, 0, 0, ['';'']);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns a list of all files that are in the specified folder on the front-panel USB storage device.</Description>
            </Method>
            <Method>
               <Name>GetCatalog</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [MemoryUsed, MemoryFree, FileList] = GetCatalog(obj, FolderName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
[MemoryUsed, MemoryFree, FileList] = comobj.GetCatalog(FolderName, 0, 0, ['';'']);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns a list of all files that are in the specified folder on the front-panel USB storage device.</Description>
            </Method>
            <Method>
               <Name>GetCatalogDataFiles</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [MemoryUsed, MemoryFree, FileList] = GetCatalogDataFiles(obj, FolderName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
[MemoryUsed, MemoryFree, FileList] = comobj.GetCatalogDataFiles(FolderName, 0, 0, ['';'']);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns a list of all the arb sequence (.seq) files and folders as well as arb segment (.arb/.barb) files in the specified folder.</Description>
            </Method>
            <Method>
               <Name>GetCatalogDataFiles</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [MemoryUsed, MemoryFree, FileList] = GetCatalogDataFiles(obj, FolderName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
[MemoryUsed, MemoryFree, FileList] = comobj.GetCatalogDataFiles(FolderName, 0, 0, ['';'']);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns a list of all the arb sequence (.seq) files and folders as well as arb segment (.arb/.barb) files in the specified folder.</Description>
            </Method>
            <Method>
               <Name>GetCatalogStateFiles</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [MemoryUsed, MemoryFree, FileList] = GetCatalogStateFiles(obj, FolderName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
[MemoryUsed, MemoryFree, FileList] = comobj.GetCatalogStateFiles(FolderName, 0, 0, ['';'']);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the catalog of only the state (.sta) files in the selected folder.</Description>
            </Method>
            <Method>
               <Name>GetCatalogStateFiles</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [MemoryUsed, MemoryFree, FileList] = GetCatalogStateFiles(obj, FolderName, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
[MemoryUsed, MemoryFree, FileList] = comobj.GetCatalogStateFiles(FolderName, 0, 0, ['';'']);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method returns the catalog of only the state (.sta) files in the selected folder.</Description>
            </Method>
            <Method>
               <Name>Load</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Load(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.Load(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads a complete instrument setup from the named file on the mass storage media.</Description>
            </Method>
            <Method>
               <Name>Load</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Load(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.Load(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads a complete instrument setup from the named file on the mass storage media.</Description>
            </Method>
            <Method>
               <Name>LoadList</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadList(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.LoadList(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads the frequency list from a file named &lt;filename&gt; on the Mass Memory device.&lt;/filename&gt;</Description>
            </Method>
            <Method>
               <Name>LoadList</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadList(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.LoadList(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads the frequency list from a file named &lt;filename&gt; on the Mass Memory device.&lt;/filename&gt;</Description>
            </Method>
            <Method>
               <Name>LoadState</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadState(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.LoadState(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads a standard instrument setup from the named file on the mass storage media to the named store/recall state.</Description>
            </Method>
            <Method>
               <Name>LoadState</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LoadState(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.LoadState(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method loads a standard instrument setup from the named file on the mass storage media to the named store/recall state.</Description>
            </Method>
            <Method>
               <Name>MakeDirectory</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function MakeDirectory(obj, DirectoryName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.MakeDirectory(DirectoryName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method creates a new directory (folder) on the mass storage media.</Description>
            </Method>
            <Method>
               <Name>MakeDirectory</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function MakeDirectory(obj, DirectoryName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.MakeDirectory(DirectoryName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method creates a new directory (folder) on the mass storage media.</Description>
            </Method>
            <Method>
               <Name>MoveFiles</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function MoveFiles(obj, SourceFile, DestinationFile)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.MoveFiles(SourceFile, DestinationFile);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method moves and/or renames Source file to destination file. The file names must include the file extension.</Description>
            </Method>
            <Method>
               <Name>MoveFiles</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function MoveFiles(obj, SourceFile, DestinationFile)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.MoveFiles(SourceFile, DestinationFile);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method moves and/or renames Source file to destination file. The file names must include the file extension.</Description>
            </Method>
            <Method>
               <Name>RemoveFile</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function RemoveFile(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.RemoveFile(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method removes a file from the specified mass storage device. The file name must include any file extension.</Description>
            </Method>
            <Method>
               <Name>RemoveFile</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function RemoveFile(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.RemoveFile(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method removes a file from the specified mass storage device. The file name must include any file extension.</Description>
            </Method>
            <Method>
               <Name>RemoveFolder</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function RemoveFolder(obj, FolderName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.RemoveFolder(FolderName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method removes the specified folder on the mass storage medium.</Description>
            </Method>
            <Method>
               <Name>RemoveFolder</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function RemoveFolder(obj, FolderName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.RemoveFolder(FolderName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method removes the specified folder on the mass storage medium.</Description>
            </Method>
            <Method>
               <Name>StateCatalog</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = StateCatalog(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.StateCatalog();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>List the names associated with all five state storage locations.</Description>
            </Method>
            <Method>
               <Name>Store</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Store(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.Store(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method stores a complete instrument setup file to a named file on the mass storage media.</Description>
            </Method>
            <Method>
               <Name>Store</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Store(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.Store(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method stores a complete instrument setup file to a named file on the mass storage media.</Description>
            </Method>
            <Method>
               <Name>StoreList</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function StoreList(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.StoreList(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method saved the active frequency list to a file named &lt;filename&gt; on the Mass Memory device.&lt;/filename&gt;</Description>
            </Method>
            <Method>
               <Name>StoreList</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function StoreList(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.StoreList(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method saved the active frequency list to a file named &lt;filename&gt; on the Mass Memory device.&lt;/filename&gt;</Description>
            </Method>
            <Method>
               <Name>StoreState</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function StoreState(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.StoreState(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method stores the current instrument state to a state file.  The file name optionally includes the folder name and the .sta file extension.</Description>
            </Method>
            <Method>
               <Name>StoreState</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function StoreState(obj, FileName)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.StoreState(FileName);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method stores the current instrument state to a state file.  The file name optionally includes the folder name and the .sta file extension.</Description>
            </Method>
            <Method>
               <Name>UploadFile</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function UploadFile(obj, Source, Destination)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.UploadFile(Source, Destination);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method uploads the contents of a file from the instrument to a file on the host computer and returns the file content as an IEEE 488.2 definite-length block.</Description>
            </Method>
            <Method>
               <Name>UploadFile</Name>
               <Location>Memory2</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function UploadFile(obj, Source, Destination)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Memory2;
feature('COM_SafeArraySingleDim',1);
comobj.UploadFile(Source, Destination);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This method uploads the contents of a file from the instrument to a file on the host computer and returns the file content as an IEEE 488.2 definite-length block.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>StateStorage</Name>
         <Description>IAg3352xStateStorage interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="StateStorage1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>AutoRecallEnabled</Name>
               <Location>StateStorage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.StateStorage;
	propertyValue = comobj.AutoRecallEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.StateStorage;
	comobj.AutoRecallEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>The automatic recall of a specific stored instrument state from storage location '0' when power is turned on.</Description>
            </Property>
            <Property>
               <Name>NumberOfStates</Name>
               <Location>StateStorage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.StateStorage;
	propertyValue = comobj.NumberOfStates;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Read Only.  The total number of memory locations available for state storage.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>Delete</Name>
               <Location>StateStorage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Delete(obj, State)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.StateStorage;
feature('COM_SafeArraySingleDim',1);
comobj.Delete(int32(State));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This property deletes the contents of the specified storage location.</Description>
            </Method>
            <Method>
               <Name>GetCatalog</Name>
               <Location>StateStorage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = GetCatalog(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.StateStorage;
feature('COM_SafeArraySingleDim',1);
[Val] = comobj.GetCatalog();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>This property returns the names assigned to storage locations 0 through 4.</Description>
            </Method>
            <Method>
               <Name>GetState</Name>
               <Location>StateStorage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Data] = GetState(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.StateStorage;
feature('COM_SafeArraySingleDim',1);
[Data] = comobj.GetState(uint8([0;0]));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Not Supported - Binary current instrument state.  May be restored using PutState method.  Data is in internal instrument format, do not alter.</Description>
            </Method>
            <Method>
               <Name>Name</Name>
               <Location>StateStorage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Name(obj, State, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.StateStorage;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Name(int32(State), varargin{:});
end
[Val] = comobj.Name(int32(State));
</MCode>
               </Code>
               <Description>The custom name to the specified storage location.</Description>
            </Method>
            <Method>
               <Name>PutState</Name>
               <Location>StateStorage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function PutState(obj, Data)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.StateStorage;
feature('COM_SafeArraySingleDim',1);
comobj.PutState(uint8(Data));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Not Supported - Writes binary instrument state as saved by GetState method.</Description>
            </Method>
            <Method>
               <Name>Recall</Name>
               <Location>StateStorage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Recall(obj, State)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.StateStorage;
feature('COM_SafeArraySingleDim',1);
comobj.Recall(int32(State));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Recall the instrument state stored in the specified non-volatile storage location. You cannot recall the instrument state from a storage location that is empty.</Description>
            </Method>
            <Method>
               <Name>Save</Name>
               <Location>StateStorage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Save(obj, State)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.StateStorage;
feature('COM_SafeArraySingleDim',1);
comobj.Save(int32(State));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Store (save) the current instrument state in the specified non-volatile storage location. Any state previously stored in the same location will be overwritten (and no error will be generated).</Description>
            </Method>
            <Method>
               <Name>Valid</Name>
               <Location>StateStorage</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [Val] = Valid(obj, Location, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.StateStorage;
feature('COM_SafeArraySingleDim',1);
if ~isempty(varargin)
	comobj.Valid(int32(Location), varargin{:});
end
[Val] = comobj.Valid(int32(Location));
</MCode>
               </Code>
               <Description>Read Only.  The valid Stored State at the desired location.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>System</Name>
         <Description>IAg3352xSystem interface.</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="System1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>Date</Name>
               <Location>System</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	propertyValue = comobj.Date;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj.Date = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Current date formatted as 'YYYY, MM,DD'. YYYY is a four-digit representation of the year including century and millennium information. MM is a two-digit representation of the month where January is 1 and December is 12. DD is the day of the month.</Description>
            </Property>
            <Property>
               <Name>SerialNumber</Name>
               <Location>System</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	propertyValue = comobj.SerialNumber;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Instrument serial number.</Description>
            </Property>
            <Property>
               <Name>Time</Name>
               <Location>System</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	propertyValue = comobj.Time;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj.Time = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Current time formatted as 'HH,MM,SS.SSSSS'. HH is the hour and its range is 0 to 23 inclusive. MM is the minute and its range is 0 to 59 inclusive. SS is the second in the range 0 to 59.999.</Description>
            </Property>
            <Property>
               <Name>TimeoutMilliseconds</Name>
               <Location>System</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	propertyValue = comobj.TimeoutMilliseconds;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj.TimeoutMilliseconds = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>I/O timeout value, in milliseconds.  If a lengthy driver operation returns a timeout error it may be necessary to increase the I/O timeout value.</Description>
            </Property>
            <Property>
               <Name>TraceEnabled</Name>
               <Location>System</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	propertyValue = comobj.TraceEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj.TraceEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>If true, output trace log of all driver calls to an XML file in the same directory as the driver application executable OR as specified using options when initializing the driver (see Remarks below).  The log file may be viewed in your web browser.</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>DisableLocalControls</Name>
               <Location>System</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function DisableLocalControls(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
feature('COM_SafeArraySingleDim',1);
comobj.DisableLocalControls();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Disables all instrument front panel keys (local control) with the exception of the power switch. Use the EnableLocalControl method to restore front panel operation.</Description>
            </Method>
            <Method>
               <Name>EnableLocalControls</Name>
               <Location>System</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function EnableLocalControls(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
feature('COM_SafeArraySingleDim',1);
comobj.EnableLocalControls();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Allows an operator to examine and change the instrument's state through its local controls. The client can allow an operator to interact directly with the instrument through its front panel for a period of time.</Description>
            </Method>
            <Method>
               <Name>WaitForOperationComplete</Name>
               <Location>System</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function WaitForOperationComplete(obj, MaxTimeMilliseconds)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
feature('COM_SafeArraySingleDim',1);
comobj.WaitForOperationComplete(int32(MaxTimeMilliseconds));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Does not return until previously started operations complete or more MaxTimeMilliseconds milliseconds of time have expired.</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>SystemDirectIO</Name>
         <Description>IEEE 488.2 Formatted I/O Interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="SystemDirectIO1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>InstrumentBigEndian</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	propertyValue = comobj.InstrumentBigEndian;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj.InstrumentBigEndian = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Get/Set whether the instrument communicates in Big Endian (IEEE 488.2) format</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>FlushRead</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function FlushRead(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
feature('COM_SafeArraySingleDim',1);
comobj.FlushRead();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Flush the Read Buffer</Description>
            </Method>
            <Method>
               <Name>FlushWrite</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function FlushWrite(obj, sendEND)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
feature('COM_SafeArraySingleDim',1);
comobj.FlushWrite(logical(sendEND));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Flush the Write Buffer and optionally send the END signal</Description>
            </Method>
            <Method>
               <Name>ReadIEEEBlock</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pData] = ReadIEEEBlock(obj, type, seekToBlock, flushToEND)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
feature('COM_SafeArraySingleDim',1);
[pData] = comobj.ReadIEEEBlock(type, logical(seekToBlock), logical(flushToEND));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Read a definite-length IEEE block from the I/O Stream and optionally flush the buffer</Description>
            </Method>
            <Method>
               <Name>ReadList</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pData] = ReadList(obj, type, listSeperator)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
feature('COM_SafeArraySingleDim',1);
[pData] = comobj.ReadList(type, listSeperator);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Read a list of values in ASCII format from the I/O Stream, convert them to the specified type, and optionally flush the buffer</Description>
            </Method>
            <Method>
               <Name>ReadNumber</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pData] = ReadNumber(obj, type, flushToEND)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
feature('COM_SafeArraySingleDim',1);
[pData] = comobj.ReadNumber(type, logical(flushToEND));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Read a single number from the I/O Stream and optionally flush the buffer</Description>
            </Method>
            <Method>
               <Name>ReadString</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pData] = ReadString(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
feature('COM_SafeArraySingleDim',1);
[pData] = comobj.ReadString();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Read the entire contents of the buffer until the termination character / END signal and return the data as a string</Description>
            </Method>
            <Method>
               <Name>SetBufferSize</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function SetBufferSize(obj, mask, size)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
feature('COM_SafeArraySingleDim',1);
comobj.SetBufferSize(mask, int32(size));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Set the formatted I/O read or write buffer size</Description>
            </Method>
            <Method>
               <Name>WriteIEEEBlock</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function WriteIEEEBlock(obj, Command, data, flushAndEND)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
feature('COM_SafeArraySingleDim',1);
comobj.WriteIEEEBlock(Command, logical(flushAndEND));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Write a command followed by an IEEE 488.2 definite-length binary block terminated with the Stream's termination character to the I/O Stream</Description>
            </Method>
            <Method>
               <Name>WriteList</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function WriteList(obj, data, type, listSeperator, flushAndEND)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
feature('COM_SafeArraySingleDim',1);
comobj.WriteList(type, listSeperator, logical(flushAndEND));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Write a list of values to the I/O Stream and optionally flush the buffer</Description>
            </Method>
            <Method>
               <Name>WriteNumber</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function WriteNumber(obj, data, type, flushAndEND)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
feature('COM_SafeArraySingleDim',1);
comobj.WriteNumber(type, logical(flushAndEND));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Write a single number to the I/O Stream and optionally flush the buffer</Description>
            </Method>
            <Method>
               <Name>WriteString</Name>
               <Location>SystemDirectIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function WriteString(obj, data, flushAndEND)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
feature('COM_SafeArraySingleDim',1);
comobj.WriteString(data, logical(flushAndEND));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Write a string to the I/O Stream and optionally flush the buffer</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>SystemDirectIOIO</Name>
         <Description>Message Based Interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="SystemDirectIOIO1" Index="1"/>
         </Mappings>
         <PropertyInfo>
            <Property>
               <Name>ComponentVersion</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.ComponentVersion;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the implementation version of the component</Description>
            </Property>
            <Property>
               <Name>ComponentVersion</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.ComponentVersion;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the implementation version of the component</Description>
            </Property>
            <Property>
               <Name>HardwareInterfaceName</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.HardwareInterfaceName;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get a description of the hardware interface</Description>
            </Property>
            <Property>
               <Name>HardwareInterfaceName</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.HardwareInterfaceName;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get a description of the hardware interface</Description>
            </Property>
            <Property>
               <Name>HardwareInterfaceNumber</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.HardwareInterfaceNumber;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the hardware interface number</Description>
            </Property>
            <Property>
               <Name>HardwareInterfaceNumber</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.HardwareInterfaceNumber;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the hardware interface number</Description>
            </Property>
            <Property>
               <Name>HardwareInterfaceType</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.HardwareInterfaceType;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the hardware interface type</Description>
            </Property>
            <Property>
               <Name>HardwareInterfaceType</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.HardwareInterfaceType;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the hardware interface type</Description>
            </Property>
            <Property>
               <Name>IOProtocol</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.IOProtocol;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	comobj.IOProtocol = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="PROT_NORMAL" Value="PROT_NORMAL"/>
                     <Enum Name="PROT_FDC" Value="PROT_FDC"/>
                     <Enum Name="PROT_HS488" Value="PROT_HS488"/>
                     <Enum Name="PROT_4882_STRS" Value="PROT_4882_STRS"/>
                     <Enum Name="PROT_USBTMC_VENDOR" Value="PROT_USBTMC_VENDOR"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Get/Set which I/O protocol to use</Description>
            </Property>
            <Property>
               <Name>IOProtocol</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.IOProtocol;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	comobj.IOProtocol = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="PROT_NORMAL" Value="PROT_NORMAL"/>
                     <Enum Name="PROT_FDC" Value="PROT_FDC"/>
                     <Enum Name="PROT_HS488" Value="PROT_HS488"/>
                     <Enum Name="PROT_4882_STRS" Value="PROT_4882_STRS"/>
                     <Enum Name="PROT_USBTMC_VENDOR" Value="PROT_USBTMC_VENDOR"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Get/Set which I/O protocol to use</Description>
            </Property>
            <Property>
               <Name>LastStatus</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>InstrumentCommand</Type>
               <Code>
                  <Commands>
                     <ConfigureCommand/>
                     <QueryCommand/>
                  </Commands>
               </Code>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description/>
            </Property>
            <Property>
               <Name>LastStatus</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>InstrumentCommand</Type>
               <Code>
                  <Commands>
                     <ConfigureCommand/>
                     <QueryCommand/>
                  </Commands>
               </Code>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description/>
            </Property>
            <Property>
               <Name>LockState</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.LockState;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="NO_LOCK" Value="NO_LOCK"/>
                     <Enum Name="EXCLUSIVE_LOCK" Value="EXCLUSIVE_LOCK"/>
                     <Enum Name="SHARED_LOCK" Value="SHARED_LOCK"/>
                     <Enum Name="LOAD_CONFIG" Value="LOAD_CONFIG"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the current lock state of the resource</Description>
            </Property>
            <Property>
               <Name>LockState</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.LockState;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>enum</Constraint>
                  <ConstraintValue>
                     <Enum Name="NO_LOCK" Value="NO_LOCK"/>
                     <Enum Name="EXCLUSIVE_LOCK" Value="EXCLUSIVE_LOCK"/>
                     <Enum Name="SHARED_LOCK" Value="SHARED_LOCK"/>
                     <Enum Name="LOAD_CONFIG" Value="LOAD_CONFIG"/>
                  </ConstraintValue>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the current lock state of the resource</Description>
            </Property>
            <Property>
               <Name>OptionString</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.OptionString;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the current state of all settable properties</Description>
            </Property>
            <Property>
               <Name>OptionString</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.OptionString;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the current state of all settable properties</Description>
            </Property>
            <Property>
               <Name>ProgID</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.ProgID;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the ProgID of the component</Description>
            </Property>
            <Property>
               <Name>ProgID</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.ProgID;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the ProgID of the component</Description>
            </Property>
            <Property>
               <Name>ResourceName</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.ResourceName;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the resource name</Description>
            </Property>
            <Property>
               <Name>ResourceName</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.ResourceName;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the resource name</Description>
            </Property>
            <Property>
               <Name>SendEndEnabled</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.SendEndEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	comobj.SendEndEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Get/Set whether to assert END on Write</Description>
            </Property>
            <Property>
               <Name>SendEndEnabled</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.SendEndEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	comobj.SendEndEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Get/Set whether to assert END on Write</Description>
            </Property>
            <Property>
               <Name>SessionType</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.SessionType;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the session class type</Description>
            </Property>
            <Property>
               <Name>SessionType</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.SessionType;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the session class type</Description>
            </Property>
            <Property>
               <Name>SoftwareManufacturerID</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.SoftwareManufacturerID;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the manufacturer ID of the component</Description>
            </Property>
            <Property>
               <Name>SoftwareManufacturerID</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.SoftwareManufacturerID;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the manufacturer ID of the component</Description>
            </Property>
            <Property>
               <Name>SoftwareManufacturerName</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.SoftwareManufacturerName;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the manufacturer name of the component</Description>
            </Property>
            <Property>
               <Name>SoftwareManufacturerName</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.SoftwareManufacturerName;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>String</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the manufacturer name of the component</Description>
            </Property>
            <Property>
               <Name>SpecVersion</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.SpecVersion;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the VISA COM I/O specification version</Description>
            </Property>
            <Property>
               <Name>SpecVersion</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.SpecVersion;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
%	NOTE: This property is defined as read only.</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>always</ReadOnly>
               <Description>Get the VISA COM I/O specification version</Description>
            </Property>
            <Property>
               <Name>TerminationCharacter</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.TerminationCharacter;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	comobj.TerminationCharacter = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Get/Set the termination character</Description>
            </Property>
            <Property>
               <Name>TerminationCharacter</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.TerminationCharacter;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	comobj.TerminationCharacter = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Get/Set the termination character</Description>
            </Property>
            <Property>
               <Name>TerminationCharacterEnabled</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.TerminationCharacterEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	comobj.TerminationCharacterEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Get/Set whether to use the termination character on Read</Description>
            </Property>
            <Property>
               <Name>TerminationCharacterEnabled</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.TerminationCharacterEnabled;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
if ischar(propertyValue) &amp;&amp; strcmpi(propertyValue,'on')
	propertyValue = 1;
end
if strcmpi(propertyValue,'off')
	propertyValue = 0;
end

try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	comobj.TerminationCharacterEnabled = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Boolean</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Get/Set whether to use the termination character on Read</Description>
            </Property>
            <Property>
               <Name>Timeout</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.Timeout;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	comobj.Timeout = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Get/Set the I/O timeout in milliseconds</Description>
            </Property>
            <Property>
               <Name>Timeout</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <GetMCode>function propertyValue = getProperty(obj, propertyName)
% Return a property value.
%   This function is called to return the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	propertyValue = comobj.Timeout;
catch
	error('An error occurred while accessing the property');
end
</GetMCode>
                  <SetMCode>function set(obj, propertyName, propertyValue)
% Set a property value.
%   This function is called to set the device or group object property
%   value. If the property is a group property, OBJ is the group object. If
%   the property is a base device property, OBJ is the device object.
try
	comobj = obj.Parent;
	comobj = comobj.Interface;
	comobj = comobj.System;
	comobj = comobj.DirectIO;
	comobj = comobj.IO;
	comobj.Timeout = propertyValue;
catch aException
	rethrow(aException);
end</SetMCode>
               </Code>
               <PermissibleType>
                  <Type>Double</Type>
                  <Constraint>none</Constraint>
               </PermissibleType>
               <DefaultValue/>
               <ReadOnly>never</ReadOnly>
               <Description>Get/Set the I/O timeout in milliseconds</Description>
            </Property>
         </PropertyInfo>
         <MethodInfo>
            <Method>
               <Name>AssertTrigger</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function AssertTrigger(obj, protocol)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
comobj.AssertTrigger(protocol);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Assert a trigger</Description>
            </Method>
            <Method>
               <Name>AssertTrigger</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function AssertTrigger(obj, protocol)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
comobj.AssertTrigger(protocol);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Assert a trigger</Description>
            </Method>
            <Method>
               <Name>Clear</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Clear(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
comobj.Clear();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Clear the device</Description>
            </Method>
            <Method>
               <Name>Clear</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Clear(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
comobj.Clear();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Clear the device</Description>
            </Method>
            <Method>
               <Name>Close</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Close(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
comobj.Close();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Close the session</Description>
            </Method>
            <Method>
               <Name>Close</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Close(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
comobj.Close();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Close the session</Description>
            </Method>
            <Method>
               <Name>Init</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Init(obj, ResourceName, mode, initTimeout, OptionString)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
comobj.Init(ResourceName, mode, int32(initTimeout), OptionString);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Initialize a session to the specified resource name</Description>
            </Method>
            <Method>
               <Name>Init</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Init(obj, ResourceName, mode, initTimeout, OptionString)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
comobj.Init(ResourceName, mode, int32(initTimeout), OptionString);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Initialize a session to the specified resource name</Description>
            </Method>
            <Method>
               <Name>LockRsrc</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pAccessKey] = LockRsrc(obj, type, lockTimeout, requestedKey)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
[pAccessKey] = comobj.LockRsrc(type, int32(lockTimeout), requestedKey);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Establish ownership of the resource</Description>
            </Method>
            <Method>
               <Name>LockRsrc</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pAccessKey] = LockRsrc(obj, type, lockTimeout, requestedKey)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
[pAccessKey] = comobj.LockRsrc(type, int32(lockTimeout), requestedKey);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Establish ownership of the resource</Description>
            </Method>
            <Method>
               <Name>Read</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pBuffer] = Read(obj, count)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
[pBuffer] = comobj.Read(int32(count));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Read the specified number of bytes</Description>
            </Method>
            <Method>
               <Name>ReadSTB</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pStatusByte] = ReadSTB(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
[pStatusByte] = comobj.ReadSTB();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Read the status byte</Description>
            </Method>
            <Method>
               <Name>ReadSTB</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pStatusByte] = ReadSTB(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
[pStatusByte] = comobj.ReadSTB();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Read the status byte</Description>
            </Method>
            <Method>
               <Name>ReadString</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pBuffer] = ReadString(obj, count)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
[pBuffer] = comobj.ReadString(int32(count));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Read the specified number of bytes as a string</Description>
            </Method>
            <Method>
               <Name>UnlockRsrc</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function UnlockRsrc(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
comobj.UnlockRsrc();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Relinquish ownership of the resource</Description>
            </Method>
            <Method>
               <Name>UnlockRsrc</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function UnlockRsrc(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
comobj.UnlockRsrc();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Relinquish ownership of the resource</Description>
            </Method>
            <Method>
               <Name>Write</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pRetCount] = Write(obj, buffer, count)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
[pRetCount] = comobj.Write(uint8(buffer), int32(count));
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Write the specified data</Description>
            </Method>
            <Method>
               <Name>WriteString</Name>
               <Location>SystemDirectIOIO</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [pRetCount] = WriteString(obj, buffer)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.System;
comobj = comobj.DirectIO;
comobj = comobj.IO;
feature('COM_SafeArraySingleDim',1);
[pRetCount] = comobj.WriteString(buffer);
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Write the specified string</Description>
            </Method>
         </MethodInfo>
      </Group>
      <Group>
         <Name>Utility</Name>
         <Description>IVI Driver utility interface</Description>
         <Command/>
         <Size>1</Size>
         <Mappings>
            <ChannelMap Command="Utility1" Index="1"/>
         </Mappings>
         <PropertyInfo/>
         <MethodInfo>
            <Method>
               <Name>Disable</Name>
               <Location>Utility</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Disable(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Utility;
feature('COM_SafeArraySingleDim',1);
comobj.Disable();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Quickly places the instrument in a state where it has no, or minimal, effect on the external system to which it is connected.  This state is not necessarily a known state.</Description>
            </Method>
            <Method>
               <Name>ErrorQuery</Name>
               <Location>Utility</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [ErrorCode, ErrorMessage] = ErrorQuery(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Utility;
feature('COM_SafeArraySingleDim',1);
[ErrorCode, ErrorMessage] = comobj.ErrorQuery(0, '');
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Queries the instrument and returns instrument specific error information.  This function can be used when QueryInstrumentStatus is True to retrieve error details when the driver detects an instrument error.</Description>
            </Method>
            <Method>
               <Name>LockObject</Name>
               <Location>Utility</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function LockObject(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Utility;
feature('COM_SafeArraySingleDim',1);
comobj.LockObject();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Obtains a multithread lock on the driver after waiting until all other execution threads have released their locks on the instrument session.</Description>
            </Method>
            <Method>
               <Name>Reset</Name>
               <Location>Utility</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function Reset(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Utility;
feature('COM_SafeArraySingleDim',1);
comobj.Reset();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Places the instrument in a known state and configures instrument options on which the IVI specific driver depends (for example, enabling/disabling headers).  For an IEEE 488.2 instrument, Reset sends the command string *RST to the instrument.</Description>
            </Method>
            <Method>
               <Name>ResetWithDefaults</Name>
               <Location>Utility</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function ResetWithDefaults(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Utility;
feature('COM_SafeArraySingleDim',1);
comobj.ResetWithDefaults();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Does the equivalent of Reset and then, (1) disables class extension capability groups, (2) sets attributes to initial values defined by class specs, and (3) configures the driver to option string settings used when Initialize was last executed.</Description>
            </Method>
            <Method>
               <Name>SelfTest</Name>
               <Location>Utility</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function [TestResult, TestMessage] = SelfTest(obj, varargin)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Utility;
feature('COM_SafeArraySingleDim',1);
[TestResult, TestMessage] = comobj.SelfTest(0, '');
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Performs an instrument self test, waits for the instrument to complete the test, and queries the instrument for the results.  If the instrument passes the test, TestResult is zero and TestMessage is 'Self test passed'.</Description>
            </Method>
            <Method>
               <Name>UnlockObject</Name>
               <Location>Utility</Location>
               <CapabilityGroup>Base</CapabilityGroup>
               <Type>MCode</Type>
               <Code>
                  <MCode>function UnlockObject(obj)

comobj = obj.Parent;
comobj = comobj.Interface;
comobj = comobj.Utility;
feature('COM_SafeArraySingleDim',1);
comobj.UnlockObject();
feature('COM_SafeArraySingleDim',0);
</MCode>
               </Code>
               <Description>Releases a previously obtained mutlithread lock.</Description>
            </Method>
         </MethodInfo>
      </Group>
   </GroupInfo>
</MATLABInstrumentDriver>